[INFO ][2010-05-02 19:00:53] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7f4ec: display name [org.springframework.context.support.ClassPathXmlApplicationContext@7f4ec]; startup date [Sun May 02 19:00:53 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 19:00:53] Loading XML bean definitions from class path resource [applicationContext.xml]
[INFO ][2010-05-02 19:00:53] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@11ca803: display name [org.springframework.context.support.ClassPathXmlApplicationContext@11ca803]; startup date [Sun May 02 19:00:53 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 19:00:53] Loading XML bean definitions from class path resource [applicationContext.xml]
[INFO ][2010-05-02 19:00:53] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@153c375: display name [org.springframework.context.support.ClassPathXmlApplicationContext@153c375]; startup date [Sun May 02 19:00:53 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 19:00:53] Loading XML bean definitions from class path resource [applicationContext.xml]
[INFO ][2010-05-02 19:00:53] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@453807: display name [org.springframework.context.support.ClassPathXmlApplicationContext@453807]; startup date [Sun May 02 19:00:53 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 19:00:53] Loading XML bean definitions from class path resource [applicationContext.xml]
[INFO ][2010-05-02 19:00:53] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6caf16: display name [org.springframework.context.support.ClassPathXmlApplicationContext@6caf16]; startup date [Sun May 02 19:00:53 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 19:00:53] Loading XML bean definitions from class path resource [applicationContext.xml]
[INFO ][2010-05-02 19:01:00] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1d86fd3: display name [org.springframework.context.support.ClassPathXmlApplicationContext@1d86fd3]; startup date [Sun May 02 19:01:00 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 19:01:01] Loading XML bean definitions from class path resource [applicationContext.xml]
[INFO ][2010-05-02 19:01:14] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@df48c4: display name [org.springframework.context.support.ClassPathXmlApplicationContext@df48c4]; startup date [Sun May 02 19:01:14 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 19:01:14] Loading XML bean definitions from class path resource [applicationContext.xml]
[INFO ][2010-05-02 19:01:58] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1226a77: display name [org.springframework.context.support.ClassPathXmlApplicationContext@1226a77]; startup date [Sun May 02 19:01:58 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 19:01:58] Loading XML bean definitions from class path resource [applicationContext.xml]
[INFO ][2010-05-02 19:04:15] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@ee3aa7: display name [org.springframework.context.support.ClassPathXmlApplicationContext@ee3aa7]; startup date [Sun May 02 19:04:15 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 19:04:15] Loading XML bean definitions from class path resource [applicationContext.xml]
[INFO ][2010-05-02 19:05:25] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1d86fd3: display name [org.springframework.context.support.ClassPathXmlApplicationContext@1d86fd3]; startup date [Sun May 02 19:05:25 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 19:05:25] Loading XML bean definitions from class path resource [applicationContext.xml]
[INFO ][2010-05-02 19:05:25] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@1d86fd3]: org.springframework.beans.factory.support.DefaultListableBeanFactory@1b34126
[INFO ][2010-05-02 19:05:25] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1b34126: defining beans [sessionFactory,PlacardDAO,StatementDAO,GossipDAO,ItemDAO,AlbumDAO,BlogDAO,UserDAO,PictureDAO,ReplyDAO,FriendsDAO,AdminDAO,loginAction]; root of factory hierarchy
[INFO ][2010-05-02 19:05:25] Hibernate 3.2.7
[INFO ][2010-05-02 19:05:25] hibernate.properties not found
[INFO ][2010-05-02 19:05:25] Bytecode provider name : cglib
[INFO ][2010-05-02 19:05:25] using JDK 1.4 java.sql.Timestamp handling
[INFO ][2010-05-02 19:05:25] configuring from url: file:/K:/SSD10/Project/GoodFriend/WebRoot/WEB-INF/classes/hibernate.cfg.xml
[INFO ][2010-05-02 19:05:25] Reading mappings from resource : com/goodfriend/model/Placard.hbm.xml
[INFO ][2010-05-02 19:05:26] Mapping class: com.goodfriend.model.Placard -> placard
[INFO ][2010-05-02 19:05:26] Reading mappings from resource : com/goodfriend/model/Statement.hbm.xml
[INFO ][2010-05-02 19:05:26] Mapping class: com.goodfriend.model.Statement -> statement
[INFO ][2010-05-02 19:05:26] Reading mappings from resource : com/goodfriend/model/Gossip.hbm.xml
[INFO ][2010-05-02 19:05:26] Mapping class: com.goodfriend.model.Gossip -> gossip
[INFO ][2010-05-02 19:05:26] Reading mappings from resource : com/goodfriend/model/Item.hbm.xml
[INFO ][2010-05-02 19:05:26] Mapping class: com.goodfriend.model.Item -> item
[INFO ][2010-05-02 19:05:26] Reading mappings from resource : com/goodfriend/model/Album.hbm.xml
[INFO ][2010-05-02 19:05:26] Mapping class: com.goodfriend.model.Album -> album
[INFO ][2010-05-02 19:05:26] Reading mappings from resource : com/goodfriend/model/Blog.hbm.xml
[INFO ][2010-05-02 19:05:26] Mapping class: com.goodfriend.model.Blog -> blog
[INFO ][2010-05-02 19:05:26] Reading mappings from resource : com/goodfriend/model/User.hbm.xml
[INFO ][2010-05-02 19:05:26] Mapping class: com.goodfriend.model.User -> user
[INFO ][2010-05-02 19:05:26] Reading mappings from resource : com/goodfriend/model/Picture.hbm.xml
[INFO ][2010-05-02 19:05:26] Mapping class: com.goodfriend.model.Picture -> picture
[INFO ][2010-05-02 19:05:26] Reading mappings from resource : com/goodfriend/model/Reply.hbm.xml
[INFO ][2010-05-02 19:05:26] Mapping class: com.goodfriend.model.Reply -> reply
[INFO ][2010-05-02 19:05:26] Reading mappings from resource : com/goodfriend/model/Friends.hbm.xml
[INFO ][2010-05-02 19:05:26] Mapping class: com.goodfriend.model.Friends -> friends
[INFO ][2010-05-02 19:05:26] Reading mappings from resource : com/goodfriend/model/Admin.hbm.xml
[INFO ][2010-05-02 19:05:26] Mapping class: com.goodfriend.model.Admin -> admin
[INFO ][2010-05-02 19:05:26] Configured SessionFactory: null
[INFO ][2010-05-02 19:05:26] Mapping collection: com.goodfriend.model.Item.gossips -> gossip
[INFO ][2010-05-02 19:05:26] Mapping collection: com.goodfriend.model.Item.pictures -> picture
[INFO ][2010-05-02 19:05:26] Mapping collection: com.goodfriend.model.Item.statements -> statement
[INFO ][2010-05-02 19:05:26] Mapping collection: com.goodfriend.model.Item.users -> user
[INFO ][2010-05-02 19:05:26] Mapping collection: com.goodfriend.model.Item.blogs -> blog
[INFO ][2010-05-02 19:05:26] Mapping collection: com.goodfriend.model.Item.replies -> reply
[INFO ][2010-05-02 19:05:26] Mapping collection: com.goodfriend.model.Item.albums -> album
[INFO ][2010-05-02 19:05:26] Mapping collection: com.goodfriend.model.Album.pictures -> picture
[INFO ][2010-05-02 19:05:26] Mapping collection: com.goodfriend.model.User.friendsesForFriendId -> friends
[INFO ][2010-05-02 19:05:26] Mapping collection: com.goodfriend.model.User.replies -> reply
[INFO ][2010-05-02 19:05:26] Mapping collection: com.goodfriend.model.User.friendsesForUserId -> friends
[INFO ][2010-05-02 19:05:26] Mapping collection: com.goodfriend.model.User.gossips -> gossip
[INFO ][2010-05-02 19:05:26] Building new Hibernate SessionFactory
[INFO ][2010-05-02 19:05:26] Using Hibernate built-in connection pool (not for production use!)
[INFO ][2010-05-02 19:05:26] Hibernate connection pool size: 20
[INFO ][2010-05-02 19:05:26] autocommit mode: false
[INFO ][2010-05-02 19:05:26] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/goodfriend
[INFO ][2010-05-02 19:05:26] connection properties: {user=root, password=****}
[INFO ][2010-05-02 19:05:26] RDBMS: MySQL, version: 5.0.67-community-nt
[INFO ][2010-05-02 19:05:26] JDBC driver: MySQL-AB JDBC Driver, version: mysql-connector-java-5.0.8 ( Revision: ${svn.Revision} )
[INFO ][2010-05-02 19:05:26] Using dialect: org.hibernate.dialect.MySQLDialect
[INFO ][2010-05-02 19:05:26] Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[INFO ][2010-05-02 19:05:26] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[INFO ][2010-05-02 19:05:26] Automatic flush during beforeCompletion(): disabled
[INFO ][2010-05-02 19:05:26] Automatic session close at end of transaction: disabled
[INFO ][2010-05-02 19:05:26] JDBC batch size: 15
[INFO ][2010-05-02 19:05:26] JDBC batch updates for versioned data: disabled
[INFO ][2010-05-02 19:05:26] Scrollable result sets: enabled
[INFO ][2010-05-02 19:05:26] JDBC3 getGeneratedKeys(): enabled
[INFO ][2010-05-02 19:05:26] Connection release mode: auto
[INFO ][2010-05-02 19:05:26] Maximum outer join fetch depth: 2
[INFO ][2010-05-02 19:05:26] Default batch fetch size: 1
[INFO ][2010-05-02 19:05:26] Generate SQL with comments: disabled
[INFO ][2010-05-02 19:05:26] Order SQL updates by primary key: disabled
[INFO ][2010-05-02 19:05:26] Order SQL inserts for batching: disabled
[INFO ][2010-05-02 19:05:26] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[INFO ][2010-05-02 19:05:26] Using ASTQueryTranslatorFactory
[INFO ][2010-05-02 19:05:26] Query language substitutions: {}
[INFO ][2010-05-02 19:05:26] JPA-QL strict compliance: disabled
[INFO ][2010-05-02 19:05:26] Second-level cache: enabled
[INFO ][2010-05-02 19:05:26] Query cache: disabled
[INFO ][2010-05-02 19:05:26] Cache provider: org.hibernate.cache.NoCacheProvider
[INFO ][2010-05-02 19:05:26] Optimize cache for minimal puts: disabled
[INFO ][2010-05-02 19:05:26] Structured second-level cache entries: disabled
[INFO ][2010-05-02 19:05:26] Statistics: disabled
[INFO ][2010-05-02 19:05:26] Deleted entity synthetic identifier rollback: disabled
[INFO ][2010-05-02 19:05:26] Default entity-mode: pojo
[INFO ][2010-05-02 19:05:26] Named query checking : enabled
[INFO ][2010-05-02 19:05:26] building session factory
[INFO ][2010-05-02 19:05:27] Not binding factory to JNDI, no JNDI name configured
[INFO ][2010-05-02 19:13:53] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@958bb8: display name [org.springframework.context.support.ClassPathXmlApplicationContext@958bb8]; startup date [Sun May 02 19:13:53 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 19:13:53] Loading XML bean definitions from class path resource [applicationContextForTest.xml]
[INFO ][2010-05-02 19:13:53] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@958bb8]: org.springframework.beans.factory.support.DefaultListableBeanFactory@17a4989
[INFO ][2010-05-02 19:13:54] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@17a4989: defining beans [sessionFactory,PlacardDAO,StatementDAO,GossipDAO,ItemDAO,AlbumDAO,BlogDAO,UserDAO,PictureDAO,ReplyDAO,FriendsDAO,AdminDAO,loginAction]; root of factory hierarchy
[INFO ][2010-05-02 19:13:54] Hibernate 3.2.7
[INFO ][2010-05-02 19:13:54] hibernate.properties not found
[INFO ][2010-05-02 19:13:54] Bytecode provider name : cglib
[INFO ][2010-05-02 19:13:54] using JDK 1.4 java.sql.Timestamp handling
[INFO ][2010-05-02 19:13:54] configuring from url: file:/K:/SSD10/Project/GoodFriend/WebRoot/WEB-INF/classes/hibernate.cfg.xml
[INFO ][2010-05-02 19:13:54] Reading mappings from resource : com/goodfriend/model/Placard.hbm.xml
[INFO ][2010-05-02 19:13:54] Mapping class: com.goodfriend.model.Placard -> placard
[INFO ][2010-05-02 19:13:54] Reading mappings from resource : com/goodfriend/model/Statement.hbm.xml
[INFO ][2010-05-02 19:13:54] Mapping class: com.goodfriend.model.Statement -> statement
[INFO ][2010-05-02 19:13:54] Reading mappings from resource : com/goodfriend/model/Gossip.hbm.xml
[INFO ][2010-05-02 19:13:54] Mapping class: com.goodfriend.model.Gossip -> gossip
[INFO ][2010-05-02 19:13:54] Reading mappings from resource : com/goodfriend/model/Item.hbm.xml
[INFO ][2010-05-02 19:13:54] Mapping class: com.goodfriend.model.Item -> item
[INFO ][2010-05-02 19:13:54] Reading mappings from resource : com/goodfriend/model/Album.hbm.xml
[INFO ][2010-05-02 19:13:54] Mapping class: com.goodfriend.model.Album -> album
[INFO ][2010-05-02 19:13:54] Reading mappings from resource : com/goodfriend/model/Blog.hbm.xml
[INFO ][2010-05-02 19:13:54] Mapping class: com.goodfriend.model.Blog -> blog
[INFO ][2010-05-02 19:13:54] Reading mappings from resource : com/goodfriend/model/User.hbm.xml
[INFO ][2010-05-02 19:13:54] Mapping class: com.goodfriend.model.User -> user
[INFO ][2010-05-02 19:13:54] Reading mappings from resource : com/goodfriend/model/Picture.hbm.xml
[INFO ][2010-05-02 19:13:54] Mapping class: com.goodfriend.model.Picture -> picture
[INFO ][2010-05-02 19:13:54] Reading mappings from resource : com/goodfriend/model/Reply.hbm.xml
[INFO ][2010-05-02 19:13:54] Mapping class: com.goodfriend.model.Reply -> reply
[INFO ][2010-05-02 19:13:54] Reading mappings from resource : com/goodfriend/model/Friends.hbm.xml
[INFO ][2010-05-02 19:13:54] Mapping class: com.goodfriend.model.Friends -> friends
[INFO ][2010-05-02 19:13:54] Reading mappings from resource : com/goodfriend/model/Admin.hbm.xml
[INFO ][2010-05-02 19:13:55] Mapping class: com.goodfriend.model.Admin -> admin
[INFO ][2010-05-02 19:13:55] Configured SessionFactory: null
[INFO ][2010-05-02 19:13:55] Mapping collection: com.goodfriend.model.Item.gossips -> gossip
[INFO ][2010-05-02 19:13:55] Mapping collection: com.goodfriend.model.Item.pictures -> picture
[INFO ][2010-05-02 19:13:55] Mapping collection: com.goodfriend.model.Item.statements -> statement
[INFO ][2010-05-02 19:13:55] Mapping collection: com.goodfriend.model.Item.users -> user
[INFO ][2010-05-02 19:13:55] Mapping collection: com.goodfriend.model.Item.blogs -> blog
[INFO ][2010-05-02 19:13:55] Mapping collection: com.goodfriend.model.Item.replies -> reply
[INFO ][2010-05-02 19:13:55] Mapping collection: com.goodfriend.model.Item.albums -> album
[INFO ][2010-05-02 19:13:55] Mapping collection: com.goodfriend.model.Album.pictures -> picture
[INFO ][2010-05-02 19:13:55] Mapping collection: com.goodfriend.model.User.friendsesForFriendId -> friends
[INFO ][2010-05-02 19:13:55] Mapping collection: com.goodfriend.model.User.replies -> reply
[INFO ][2010-05-02 19:13:55] Mapping collection: com.goodfriend.model.User.friendsesForUserId -> friends
[INFO ][2010-05-02 19:13:55] Mapping collection: com.goodfriend.model.User.gossips -> gossip
[INFO ][2010-05-02 19:13:55] Building new Hibernate SessionFactory
[INFO ][2010-05-02 19:13:55] Using Hibernate built-in connection pool (not for production use!)
[INFO ][2010-05-02 19:13:55] Hibernate connection pool size: 20
[INFO ][2010-05-02 19:13:55] autocommit mode: false
[INFO ][2010-05-02 19:13:55] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/goodfriend
[INFO ][2010-05-02 19:13:55] connection properties: {user=root, password=****}
[INFO ][2010-05-02 19:13:55] RDBMS: MySQL, version: 5.0.67-community-nt
[INFO ][2010-05-02 19:13:55] JDBC driver: MySQL-AB JDBC Driver, version: mysql-connector-java-5.0.8 ( Revision: ${svn.Revision} )
[INFO ][2010-05-02 19:13:55] Using dialect: org.hibernate.dialect.MySQLDialect
[INFO ][2010-05-02 19:13:55] Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[INFO ][2010-05-02 19:13:55] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[INFO ][2010-05-02 19:13:55] Automatic flush during beforeCompletion(): disabled
[INFO ][2010-05-02 19:13:55] Automatic session close at end of transaction: disabled
[INFO ][2010-05-02 19:13:55] JDBC batch size: 15
[INFO ][2010-05-02 19:13:55] JDBC batch updates for versioned data: disabled
[INFO ][2010-05-02 19:13:55] Scrollable result sets: enabled
[INFO ][2010-05-02 19:13:55] JDBC3 getGeneratedKeys(): enabled
[INFO ][2010-05-02 19:13:55] Connection release mode: auto
[INFO ][2010-05-02 19:13:55] Maximum outer join fetch depth: 2
[INFO ][2010-05-02 19:13:55] Default batch fetch size: 1
[INFO ][2010-05-02 19:13:55] Generate SQL with comments: disabled
[INFO ][2010-05-02 19:13:55] Order SQL updates by primary key: disabled
[INFO ][2010-05-02 19:13:55] Order SQL inserts for batching: disabled
[INFO ][2010-05-02 19:13:55] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[INFO ][2010-05-02 19:13:55] Using ASTQueryTranslatorFactory
[INFO ][2010-05-02 19:13:55] Query language substitutions: {}
[INFO ][2010-05-02 19:13:55] JPA-QL strict compliance: disabled
[INFO ][2010-05-02 19:13:55] Second-level cache: enabled
[INFO ][2010-05-02 19:13:55] Query cache: disabled
[INFO ][2010-05-02 19:13:55] Cache provider: org.hibernate.cache.NoCacheProvider
[INFO ][2010-05-02 19:13:55] Optimize cache for minimal puts: disabled
[INFO ][2010-05-02 19:13:55] Structured second-level cache entries: disabled
[INFO ][2010-05-02 19:13:55] Statistics: disabled
[INFO ][2010-05-02 19:13:55] Deleted entity synthetic identifier rollback: disabled
[INFO ][2010-05-02 19:13:55] Default entity-mode: pojo
[INFO ][2010-05-02 19:13:55] Named query checking : enabled
[INFO ][2010-05-02 19:13:55] building session factory
[INFO ][2010-05-02 19:13:55] Not binding factory to JNDI, no JNDI name configured
[INFO ][2010-05-02 19:20:55] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1d86fd3: display name [org.springframework.context.support.ClassPathXmlApplicationContext@1d86fd3]; startup date [Sun May 02 19:20:55 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 19:20:55] Loading XML bean definitions from class path resource [applicationContextForTest.xml]
[INFO ][2010-05-02 19:20:55] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@1d86fd3]: org.springframework.beans.factory.support.DefaultListableBeanFactory@1b34126
[INFO ][2010-05-02 19:20:55] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1b34126: defining beans [sessionFactory,PlacardDAO,StatementDAO,GossipDAO,ItemDAO,AlbumDAO,BlogDAO,UserDAO,PictureDAO,ReplyDAO,FriendsDAO,AdminDAO,loginAction]; root of factory hierarchy
[INFO ][2010-05-02 19:20:55] Hibernate 3.2.7
[INFO ][2010-05-02 19:20:55] hibernate.properties not found
[INFO ][2010-05-02 19:20:55] Bytecode provider name : cglib
[INFO ][2010-05-02 19:20:55] using JDK 1.4 java.sql.Timestamp handling
[INFO ][2010-05-02 19:20:55] configuring from url: file:/K:/SSD10/Project/GoodFriend/WebRoot/WEB-INF/classes/hibernate.cfg.xml
[INFO ][2010-05-02 19:20:55] Reading mappings from resource : com/goodfriend/model/Placard.hbm.xml
[INFO ][2010-05-02 19:20:56] Mapping class: com.goodfriend.model.Placard -> placard
[INFO ][2010-05-02 19:20:56] Reading mappings from resource : com/goodfriend/model/Statement.hbm.xml
[INFO ][2010-05-02 19:20:56] Mapping class: com.goodfriend.model.Statement -> statement
[INFO ][2010-05-02 19:20:56] Reading mappings from resource : com/goodfriend/model/Gossip.hbm.xml
[INFO ][2010-05-02 19:20:56] Mapping class: com.goodfriend.model.Gossip -> gossip
[INFO ][2010-05-02 19:20:56] Reading mappings from resource : com/goodfriend/model/Item.hbm.xml
[INFO ][2010-05-02 19:20:56] Mapping class: com.goodfriend.model.Item -> item
[INFO ][2010-05-02 19:20:56] Reading mappings from resource : com/goodfriend/model/Album.hbm.xml
[INFO ][2010-05-02 19:20:56] Mapping class: com.goodfriend.model.Album -> album
[INFO ][2010-05-02 19:20:56] Reading mappings from resource : com/goodfriend/model/Blog.hbm.xml
[INFO ][2010-05-02 19:20:56] Mapping class: com.goodfriend.model.Blog -> blog
[INFO ][2010-05-02 19:20:56] Reading mappings from resource : com/goodfriend/model/User.hbm.xml
[INFO ][2010-05-02 19:20:56] Mapping class: com.goodfriend.model.User -> user
[INFO ][2010-05-02 19:20:56] Reading mappings from resource : com/goodfriend/model/Picture.hbm.xml
[INFO ][2010-05-02 19:20:56] Mapping class: com.goodfriend.model.Picture -> picture
[INFO ][2010-05-02 19:20:56] Reading mappings from resource : com/goodfriend/model/Reply.hbm.xml
[INFO ][2010-05-02 19:20:56] Mapping class: com.goodfriend.model.Reply -> reply
[INFO ][2010-05-02 19:20:56] Reading mappings from resource : com/goodfriend/model/Friends.hbm.xml
[INFO ][2010-05-02 19:20:56] Mapping class: com.goodfriend.model.Friends -> friends
[INFO ][2010-05-02 19:20:56] Reading mappings from resource : com/goodfriend/model/Admin.hbm.xml
[INFO ][2010-05-02 19:20:56] Mapping class: com.goodfriend.model.Admin -> admin
[INFO ][2010-05-02 19:20:56] Configured SessionFactory: null
[INFO ][2010-05-02 19:20:56] Mapping collection: com.goodfriend.model.Item.gossips -> gossip
[INFO ][2010-05-02 19:20:56] Mapping collection: com.goodfriend.model.Item.pictures -> picture
[INFO ][2010-05-02 19:20:56] Mapping collection: com.goodfriend.model.Item.statements -> statement
[INFO ][2010-05-02 19:20:56] Mapping collection: com.goodfriend.model.Item.users -> user
[INFO ][2010-05-02 19:20:56] Mapping collection: com.goodfriend.model.Item.blogs -> blog
[INFO ][2010-05-02 19:20:56] Mapping collection: com.goodfriend.model.Item.replies -> reply
[INFO ][2010-05-02 19:20:56] Mapping collection: com.goodfriend.model.Item.albums -> album
[INFO ][2010-05-02 19:20:56] Mapping collection: com.goodfriend.model.Album.pictures -> picture
[INFO ][2010-05-02 19:20:56] Mapping collection: com.goodfriend.model.User.friendsesForFriendId -> friends
[INFO ][2010-05-02 19:20:56] Mapping collection: com.goodfriend.model.User.replies -> reply
[INFO ][2010-05-02 19:20:56] Mapping collection: com.goodfriend.model.User.friendsesForUserId -> friends
[INFO ][2010-05-02 19:20:56] Mapping collection: com.goodfriend.model.User.gossips -> gossip
[INFO ][2010-05-02 19:20:56] Building new Hibernate SessionFactory
[INFO ][2010-05-02 19:20:56] Using Hibernate built-in connection pool (not for production use!)
[INFO ][2010-05-02 19:20:56] Hibernate connection pool size: 20
[INFO ][2010-05-02 19:20:56] autocommit mode: false
[INFO ][2010-05-02 19:20:56] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/goodfriend
[INFO ][2010-05-02 19:20:56] connection properties: {user=root, password=****}
[INFO ][2010-05-02 19:20:56] RDBMS: MySQL, version: 5.0.67-community-nt
[INFO ][2010-05-02 19:20:56] JDBC driver: MySQL-AB JDBC Driver, version: mysql-connector-java-5.0.8 ( Revision: ${svn.Revision} )
[INFO ][2010-05-02 19:20:56] Using dialect: org.hibernate.dialect.MySQLDialect
[INFO ][2010-05-02 19:20:56] Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[INFO ][2010-05-02 19:20:56] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[INFO ][2010-05-02 19:20:56] Automatic flush during beforeCompletion(): disabled
[INFO ][2010-05-02 19:20:56] Automatic session close at end of transaction: disabled
[INFO ][2010-05-02 19:20:56] JDBC batch size: 15
[INFO ][2010-05-02 19:20:56] JDBC batch updates for versioned data: disabled
[INFO ][2010-05-02 19:20:56] Scrollable result sets: enabled
[INFO ][2010-05-02 19:20:56] JDBC3 getGeneratedKeys(): enabled
[INFO ][2010-05-02 19:20:56] Connection release mode: auto
[INFO ][2010-05-02 19:20:56] Maximum outer join fetch depth: 2
[INFO ][2010-05-02 19:20:56] Default batch fetch size: 1
[INFO ][2010-05-02 19:20:56] Generate SQL with comments: disabled
[INFO ][2010-05-02 19:20:56] Order SQL updates by primary key: disabled
[INFO ][2010-05-02 19:20:56] Order SQL inserts for batching: disabled
[INFO ][2010-05-02 19:20:56] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[INFO ][2010-05-02 19:20:56] Using ASTQueryTranslatorFactory
[INFO ][2010-05-02 19:20:56] Query language substitutions: {}
[INFO ][2010-05-02 19:20:56] JPA-QL strict compliance: disabled
[INFO ][2010-05-02 19:20:56] Second-level cache: enabled
[INFO ][2010-05-02 19:20:56] Query cache: disabled
[INFO ][2010-05-02 19:20:56] Cache provider: org.hibernate.cache.NoCacheProvider
[INFO ][2010-05-02 19:20:56] Optimize cache for minimal puts: disabled
[INFO ][2010-05-02 19:20:56] Structured second-level cache entries: disabled
[INFO ][2010-05-02 19:20:56] Statistics: disabled
[INFO ][2010-05-02 19:20:56] Deleted entity synthetic identifier rollback: disabled
[INFO ][2010-05-02 19:20:56] Default entity-mode: pojo
[INFO ][2010-05-02 19:20:56] Named query checking : enabled
[INFO ][2010-05-02 19:20:56] building session factory
[INFO ][2010-05-02 19:20:57] Not binding factory to JNDI, no JNDI name configured
[INFO ][2010-05-02 19:21:43] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@958bb8: display name [org.springframework.context.support.ClassPathXmlApplicationContext@958bb8]; startup date [Sun May 02 19:21:43 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 19:21:43] Loading XML bean definitions from class path resource [applicationContextForTest.xml]
[INFO ][2010-05-02 19:21:43] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@958bb8]: org.springframework.beans.factory.support.DefaultListableBeanFactory@17a4989
[INFO ][2010-05-02 19:21:43] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@17a4989: defining beans [sessionFactory,PlacardDAO,StatementDAO,GossipDAO,ItemDAO,AlbumDAO,BlogDAO,UserDAO,PictureDAO,ReplyDAO,FriendsDAO,AdminDAO,loginAction]; root of factory hierarchy
[INFO ][2010-05-02 19:21:43] Hibernate 3.2.7
[INFO ][2010-05-02 19:21:43] hibernate.properties not found
[INFO ][2010-05-02 19:21:43] Bytecode provider name : cglib
[INFO ][2010-05-02 19:21:43] using JDK 1.4 java.sql.Timestamp handling
[INFO ][2010-05-02 19:21:43] configuring from url: file:/K:/SSD10/Project/GoodFriend/WebRoot/WEB-INF/classes/hibernate.cfg.xml
[INFO ][2010-05-02 19:21:44] Reading mappings from resource : com/goodfriend/model/Placard.hbm.xml
[INFO ][2010-05-02 19:21:44] Mapping class: com.goodfriend.model.Placard -> placard
[INFO ][2010-05-02 19:21:44] Reading mappings from resource : com/goodfriend/model/Statement.hbm.xml
[INFO ][2010-05-02 19:21:44] Mapping class: com.goodfriend.model.Statement -> statement
[INFO ][2010-05-02 19:21:44] Reading mappings from resource : com/goodfriend/model/Gossip.hbm.xml
[INFO ][2010-05-02 19:21:44] Mapping class: com.goodfriend.model.Gossip -> gossip
[INFO ][2010-05-02 19:21:44] Reading mappings from resource : com/goodfriend/model/Item.hbm.xml
[INFO ][2010-05-02 19:21:44] Mapping class: com.goodfriend.model.Item -> item
[INFO ][2010-05-02 19:21:44] Reading mappings from resource : com/goodfriend/model/Album.hbm.xml
[INFO ][2010-05-02 19:21:44] Mapping class: com.goodfriend.model.Album -> album
[INFO ][2010-05-02 19:21:44] Reading mappings from resource : com/goodfriend/model/Blog.hbm.xml
[INFO ][2010-05-02 19:21:44] Mapping class: com.goodfriend.model.Blog -> blog
[INFO ][2010-05-02 19:21:44] Reading mappings from resource : com/goodfriend/model/User.hbm.xml
[INFO ][2010-05-02 19:21:44] Mapping class: com.goodfriend.model.User -> user
[INFO ][2010-05-02 19:21:44] Reading mappings from resource : com/goodfriend/model/Picture.hbm.xml
[INFO ][2010-05-02 19:21:44] Mapping class: com.goodfriend.model.Picture -> picture
[INFO ][2010-05-02 19:21:44] Reading mappings from resource : com/goodfriend/model/Reply.hbm.xml
[INFO ][2010-05-02 19:21:44] Mapping class: com.goodfriend.model.Reply -> reply
[INFO ][2010-05-02 19:21:44] Reading mappings from resource : com/goodfriend/model/Friends.hbm.xml
[INFO ][2010-05-02 19:21:44] Mapping class: com.goodfriend.model.Friends -> friends
[INFO ][2010-05-02 19:21:44] Reading mappings from resource : com/goodfriend/model/Admin.hbm.xml
[INFO ][2010-05-02 19:21:44] Mapping class: com.goodfriend.model.Admin -> admin
[INFO ][2010-05-02 19:21:44] Configured SessionFactory: null
[INFO ][2010-05-02 19:21:44] Mapping collection: com.goodfriend.model.Item.gossips -> gossip
[INFO ][2010-05-02 19:21:44] Mapping collection: com.goodfriend.model.Item.pictures -> picture
[INFO ][2010-05-02 19:21:44] Mapping collection: com.goodfriend.model.Item.statements -> statement
[INFO ][2010-05-02 19:21:44] Mapping collection: com.goodfriend.model.Item.users -> user
[INFO ][2010-05-02 19:21:44] Mapping collection: com.goodfriend.model.Item.blogs -> blog
[INFO ][2010-05-02 19:21:44] Mapping collection: com.goodfriend.model.Item.replies -> reply
[INFO ][2010-05-02 19:21:44] Mapping collection: com.goodfriend.model.Item.albums -> album
[INFO ][2010-05-02 19:21:44] Mapping collection: com.goodfriend.model.Album.pictures -> picture
[INFO ][2010-05-02 19:21:44] Mapping collection: com.goodfriend.model.User.friendsesForFriendId -> friends
[INFO ][2010-05-02 19:21:44] Mapping collection: com.goodfriend.model.User.replies -> reply
[INFO ][2010-05-02 19:21:44] Mapping collection: com.goodfriend.model.User.friendsesForUserId -> friends
[INFO ][2010-05-02 19:21:44] Mapping collection: com.goodfriend.model.User.gossips -> gossip
[INFO ][2010-05-02 19:21:44] Building new Hibernate SessionFactory
[INFO ][2010-05-02 19:21:44] Using Hibernate built-in connection pool (not for production use!)
[INFO ][2010-05-02 19:21:44] Hibernate connection pool size: 20
[INFO ][2010-05-02 19:21:44] autocommit mode: false
[INFO ][2010-05-02 19:21:44] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/goodfriend
[INFO ][2010-05-02 19:21:44] connection properties: {user=root, password=****}
[INFO ][2010-05-02 19:21:44] RDBMS: MySQL, version: 5.0.67-community-nt
[INFO ][2010-05-02 19:21:44] JDBC driver: MySQL-AB JDBC Driver, version: mysql-connector-java-5.0.8 ( Revision: ${svn.Revision} )
[INFO ][2010-05-02 19:21:44] Using dialect: org.hibernate.dialect.MySQLDialect
[INFO ][2010-05-02 19:21:44] Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[INFO ][2010-05-02 19:21:44] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[INFO ][2010-05-02 19:21:44] Automatic flush during beforeCompletion(): disabled
[INFO ][2010-05-02 19:21:44] Automatic session close at end of transaction: disabled
[INFO ][2010-05-02 19:21:44] JDBC batch size: 15
[INFO ][2010-05-02 19:21:44] JDBC batch updates for versioned data: disabled
[INFO ][2010-05-02 19:21:44] Scrollable result sets: enabled
[INFO ][2010-05-02 19:21:44] JDBC3 getGeneratedKeys(): enabled
[INFO ][2010-05-02 19:21:44] Connection release mode: auto
[INFO ][2010-05-02 19:21:44] Maximum outer join fetch depth: 2
[INFO ][2010-05-02 19:21:44] Default batch fetch size: 1
[INFO ][2010-05-02 19:21:44] Generate SQL with comments: disabled
[INFO ][2010-05-02 19:21:44] Order SQL updates by primary key: disabled
[INFO ][2010-05-02 19:21:44] Order SQL inserts for batching: disabled
[INFO ][2010-05-02 19:21:44] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[INFO ][2010-05-02 19:21:44] Using ASTQueryTranslatorFactory
[INFO ][2010-05-02 19:21:44] Query language substitutions: {}
[INFO ][2010-05-02 19:21:44] JPA-QL strict compliance: disabled
[INFO ][2010-05-02 19:21:44] Second-level cache: enabled
[INFO ][2010-05-02 19:21:44] Query cache: disabled
[INFO ][2010-05-02 19:21:44] Cache provider: org.hibernate.cache.NoCacheProvider
[INFO ][2010-05-02 19:21:44] Optimize cache for minimal puts: disabled
[INFO ][2010-05-02 19:21:44] Structured second-level cache entries: disabled
[INFO ][2010-05-02 19:21:44] Statistics: disabled
[INFO ][2010-05-02 19:21:44] Deleted entity synthetic identifier rollback: disabled
[INFO ][2010-05-02 19:21:44] Default entity-mode: pojo
[INFO ][2010-05-02 19:21:44] Named query checking : enabled
[INFO ][2010-05-02 19:21:44] building session factory
[INFO ][2010-05-02 19:21:45] Not binding factory to JNDI, no JNDI name configured
[INFO ][2010-05-02 19:23:43] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@958bb8: display name [org.springframework.context.support.ClassPathXmlApplicationContext@958bb8]; startup date [Sun May 02 19:23:43 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 19:23:43] Loading XML bean definitions from class path resource [applicationContextForTest.xml]
[INFO ][2010-05-02 19:23:44] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@958bb8]: org.springframework.beans.factory.support.DefaultListableBeanFactory@17a4989
[INFO ][2010-05-02 19:23:44] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@17a4989: defining beans [sessionFactory,PlacardDAO,StatementDAO,GossipDAO,ItemDAO,AlbumDAO,BlogDAO,UserDAO,PictureDAO,ReplyDAO,FriendsDAO,AdminDAO,loginAction]; root of factory hierarchy
[INFO ][2010-05-02 19:23:44] Hibernate 3.2.7
[INFO ][2010-05-02 19:23:44] hibernate.properties not found
[INFO ][2010-05-02 19:23:44] Bytecode provider name : cglib
[INFO ][2010-05-02 19:23:44] using JDK 1.4 java.sql.Timestamp handling
[INFO ][2010-05-02 19:23:44] configuring from url: file:/K:/SSD10/Project/GoodFriend/WebRoot/WEB-INF/classes/hibernate.cfg.xml
[INFO ][2010-05-02 19:23:44] Reading mappings from resource : com/goodfriend/model/Placard.hbm.xml
[INFO ][2010-05-02 19:23:44] Mapping class: com.goodfriend.model.Placard -> placard
[INFO ][2010-05-02 19:23:44] Reading mappings from resource : com/goodfriend/model/Statement.hbm.xml
[INFO ][2010-05-02 19:23:44] Mapping class: com.goodfriend.model.Statement -> statement
[INFO ][2010-05-02 19:23:44] Reading mappings from resource : com/goodfriend/model/Gossip.hbm.xml
[INFO ][2010-05-02 19:23:44] Mapping class: com.goodfriend.model.Gossip -> gossip
[INFO ][2010-05-02 19:23:44] Reading mappings from resource : com/goodfriend/model/Item.hbm.xml
[INFO ][2010-05-02 19:23:45] Mapping class: com.goodfriend.model.Item -> item
[INFO ][2010-05-02 19:23:45] Reading mappings from resource : com/goodfriend/model/Album.hbm.xml
[INFO ][2010-05-02 19:23:45] Mapping class: com.goodfriend.model.Album -> album
[INFO ][2010-05-02 19:23:45] Reading mappings from resource : com/goodfriend/model/Blog.hbm.xml
[INFO ][2010-05-02 19:23:45] Mapping class: com.goodfriend.model.Blog -> blog
[INFO ][2010-05-02 19:23:45] Reading mappings from resource : com/goodfriend/model/User.hbm.xml
[INFO ][2010-05-02 19:23:45] Mapping class: com.goodfriend.model.User -> user
[INFO ][2010-05-02 19:23:45] Reading mappings from resource : com/goodfriend/model/Picture.hbm.xml
[INFO ][2010-05-02 19:23:45] Mapping class: com.goodfriend.model.Picture -> picture
[INFO ][2010-05-02 19:23:45] Reading mappings from resource : com/goodfriend/model/Reply.hbm.xml
[INFO ][2010-05-02 19:23:45] Mapping class: com.goodfriend.model.Reply -> reply
[INFO ][2010-05-02 19:23:45] Reading mappings from resource : com/goodfriend/model/Friends.hbm.xml
[INFO ][2010-05-02 19:23:45] Mapping class: com.goodfriend.model.Friends -> friends
[INFO ][2010-05-02 19:23:45] Reading mappings from resource : com/goodfriend/model/Admin.hbm.xml
[INFO ][2010-05-02 19:23:45] Mapping class: com.goodfriend.model.Admin -> admin
[INFO ][2010-05-02 19:23:45] Configured SessionFactory: null
[INFO ][2010-05-02 19:23:45] Mapping collection: com.goodfriend.model.Item.gossips -> gossip
[INFO ][2010-05-02 19:23:45] Mapping collection: com.goodfriend.model.Item.pictures -> picture
[INFO ][2010-05-02 19:23:45] Mapping collection: com.goodfriend.model.Item.statements -> statement
[INFO ][2010-05-02 19:23:45] Mapping collection: com.goodfriend.model.Item.users -> user
[INFO ][2010-05-02 19:23:45] Mapping collection: com.goodfriend.model.Item.blogs -> blog
[INFO ][2010-05-02 19:23:45] Mapping collection: com.goodfriend.model.Item.replies -> reply
[INFO ][2010-05-02 19:23:45] Mapping collection: com.goodfriend.model.Item.albums -> album
[INFO ][2010-05-02 19:23:45] Mapping collection: com.goodfriend.model.Album.pictures -> picture
[INFO ][2010-05-02 19:23:45] Mapping collection: com.goodfriend.model.User.friendsesForFriendId -> friends
[INFO ][2010-05-02 19:23:45] Mapping collection: com.goodfriend.model.User.replies -> reply
[INFO ][2010-05-02 19:23:45] Mapping collection: com.goodfriend.model.User.friendsesForUserId -> friends
[INFO ][2010-05-02 19:23:45] Mapping collection: com.goodfriend.model.User.gossips -> gossip
[INFO ][2010-05-02 19:23:45] Building new Hibernate SessionFactory
[INFO ][2010-05-02 19:23:45] Using Hibernate built-in connection pool (not for production use!)
[INFO ][2010-05-02 19:23:45] Hibernate connection pool size: 20
[INFO ][2010-05-02 19:23:45] autocommit mode: false
[INFO ][2010-05-02 19:23:45] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/goodfriend
[INFO ][2010-05-02 19:23:45] connection properties: {user=root, password=****}
[INFO ][2010-05-02 19:23:45] RDBMS: MySQL, version: 5.0.67-community-nt
[INFO ][2010-05-02 19:23:45] JDBC driver: MySQL-AB JDBC Driver, version: mysql-connector-java-5.0.8 ( Revision: ${svn.Revision} )
[INFO ][2010-05-02 19:23:45] Using dialect: org.hibernate.dialect.MySQLDialect
[INFO ][2010-05-02 19:23:45] Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[INFO ][2010-05-02 19:23:45] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[INFO ][2010-05-02 19:23:45] Automatic flush during beforeCompletion(): disabled
[INFO ][2010-05-02 19:23:45] Automatic session close at end of transaction: disabled
[INFO ][2010-05-02 19:23:45] JDBC batch size: 15
[INFO ][2010-05-02 19:23:45] JDBC batch updates for versioned data: disabled
[INFO ][2010-05-02 19:23:45] Scrollable result sets: enabled
[INFO ][2010-05-02 19:23:45] JDBC3 getGeneratedKeys(): enabled
[INFO ][2010-05-02 19:23:45] Connection release mode: auto
[INFO ][2010-05-02 19:23:45] Maximum outer join fetch depth: 2
[INFO ][2010-05-02 19:23:45] Default batch fetch size: 1
[INFO ][2010-05-02 19:23:45] Generate SQL with comments: disabled
[INFO ][2010-05-02 19:23:45] Order SQL updates by primary key: disabled
[INFO ][2010-05-02 19:23:45] Order SQL inserts for batching: disabled
[INFO ][2010-05-02 19:23:45] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[INFO ][2010-05-02 19:23:45] Using ASTQueryTranslatorFactory
[INFO ][2010-05-02 19:23:45] Query language substitutions: {}
[INFO ][2010-05-02 19:23:45] JPA-QL strict compliance: disabled
[INFO ][2010-05-02 19:23:45] Second-level cache: enabled
[INFO ][2010-05-02 19:23:45] Query cache: disabled
[INFO ][2010-05-02 19:23:45] Cache provider: org.hibernate.cache.NoCacheProvider
[INFO ][2010-05-02 19:23:45] Optimize cache for minimal puts: disabled
[INFO ][2010-05-02 19:23:45] Structured second-level cache entries: disabled
[INFO ][2010-05-02 19:23:45] Statistics: disabled
[INFO ][2010-05-02 19:23:45] Deleted entity synthetic identifier rollback: disabled
[INFO ][2010-05-02 19:23:45] Default entity-mode: pojo
[INFO ][2010-05-02 19:23:45] Named query checking : enabled
[INFO ][2010-05-02 19:23:45] building session factory
[INFO ][2010-05-02 19:23:46] Not binding factory to JNDI, no JNDI name configured
[INFO ][2010-05-02 19:24:29] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1d86fd3: display name [org.springframework.context.support.ClassPathXmlApplicationContext@1d86fd3]; startup date [Sun May 02 19:24:29 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 19:24:29] Loading XML bean definitions from class path resource [applicationContextForTest.xml]
[INFO ][2010-05-02 19:24:29] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@1d86fd3]: org.springframework.beans.factory.support.DefaultListableBeanFactory@17a4989
[INFO ][2010-05-02 19:24:29] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@17a4989: defining beans [sessionFactory,PlacardDAO,StatementDAO,GossipDAO,ItemDAO,AlbumDAO,BlogDAO,UserDAO,PictureDAO,ReplyDAO,FriendsDAO,AdminDAO,loginAction]; root of factory hierarchy
[INFO ][2010-05-02 19:24:29] Hibernate 3.2.7
[INFO ][2010-05-02 19:24:29] hibernate.properties not found
[INFO ][2010-05-02 19:24:29] Bytecode provider name : cglib
[INFO ][2010-05-02 19:24:29] using JDK 1.4 java.sql.Timestamp handling
[INFO ][2010-05-02 19:24:30] configuring from url: file:/K:/SSD10/Project/GoodFriend/WebRoot/WEB-INF/classes/hibernate.cfg.xml
[INFO ][2010-05-02 19:24:30] Reading mappings from resource : com/goodfriend/model/Placard.hbm.xml
[INFO ][2010-05-02 19:24:30] Mapping class: com.goodfriend.model.Placard -> placard
[INFO ][2010-05-02 19:24:30] Reading mappings from resource : com/goodfriend/model/Statement.hbm.xml
[INFO ][2010-05-02 19:24:30] Mapping class: com.goodfriend.model.Statement -> statement
[INFO ][2010-05-02 19:24:30] Reading mappings from resource : com/goodfriend/model/Gossip.hbm.xml
[INFO ][2010-05-02 19:24:30] Mapping class: com.goodfriend.model.Gossip -> gossip
[INFO ][2010-05-02 19:24:30] Reading mappings from resource : com/goodfriend/model/Item.hbm.xml
[INFO ][2010-05-02 19:24:30] Mapping class: com.goodfriend.model.Item -> item
[INFO ][2010-05-02 19:24:30] Reading mappings from resource : com/goodfriend/model/Album.hbm.xml
[INFO ][2010-05-02 19:24:30] Mapping class: com.goodfriend.model.Album -> album
[INFO ][2010-05-02 19:24:30] Reading mappings from resource : com/goodfriend/model/Blog.hbm.xml
[INFO ][2010-05-02 19:24:30] Mapping class: com.goodfriend.model.Blog -> blog
[INFO ][2010-05-02 19:24:30] Reading mappings from resource : com/goodfriend/model/User.hbm.xml
[INFO ][2010-05-02 19:24:30] Mapping class: com.goodfriend.model.User -> user
[INFO ][2010-05-02 19:24:30] Reading mappings from resource : com/goodfriend/model/Picture.hbm.xml
[INFO ][2010-05-02 19:24:30] Mapping class: com.goodfriend.model.Picture -> picture
[INFO ][2010-05-02 19:24:30] Reading mappings from resource : com/goodfriend/model/Reply.hbm.xml
[INFO ][2010-05-02 19:24:30] Mapping class: com.goodfriend.model.Reply -> reply
[INFO ][2010-05-02 19:24:30] Reading mappings from resource : com/goodfriend/model/Friends.hbm.xml
[INFO ][2010-05-02 19:24:30] Mapping class: com.goodfriend.model.Friends -> friends
[INFO ][2010-05-02 19:24:30] Reading mappings from resource : com/goodfriend/model/Admin.hbm.xml
[INFO ][2010-05-02 19:24:30] Mapping class: com.goodfriend.model.Admin -> admin
[INFO ][2010-05-02 19:24:30] Configured SessionFactory: null
[INFO ][2010-05-02 19:24:30] Mapping collection: com.goodfriend.model.Item.gossips -> gossip
[INFO ][2010-05-02 19:24:30] Mapping collection: com.goodfriend.model.Item.pictures -> picture
[INFO ][2010-05-02 19:24:30] Mapping collection: com.goodfriend.model.Item.statements -> statement
[INFO ][2010-05-02 19:24:30] Mapping collection: com.goodfriend.model.Item.users -> user
[INFO ][2010-05-02 19:24:30] Mapping collection: com.goodfriend.model.Item.blogs -> blog
[INFO ][2010-05-02 19:24:30] Mapping collection: com.goodfriend.model.Item.replies -> reply
[INFO ][2010-05-02 19:24:30] Mapping collection: com.goodfriend.model.Item.albums -> album
[INFO ][2010-05-02 19:24:30] Mapping collection: com.goodfriend.model.Album.pictures -> picture
[INFO ][2010-05-02 19:24:30] Mapping collection: com.goodfriend.model.User.friendsesForFriendId -> friends
[INFO ][2010-05-02 19:24:30] Mapping collection: com.goodfriend.model.User.replies -> reply
[INFO ][2010-05-02 19:24:30] Mapping collection: com.goodfriend.model.User.friendsesForUserId -> friends
[INFO ][2010-05-02 19:24:30] Mapping collection: com.goodfriend.model.User.gossips -> gossip
[INFO ][2010-05-02 19:24:30] Building new Hibernate SessionFactory
[INFO ][2010-05-02 19:24:30] Using Hibernate built-in connection pool (not for production use!)
[INFO ][2010-05-02 19:24:30] Hibernate connection pool size: 20
[INFO ][2010-05-02 19:24:30] autocommit mode: false
[INFO ][2010-05-02 19:24:30] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/goodfriend
[INFO ][2010-05-02 19:24:30] connection properties: {user=root, password=****}
[INFO ][2010-05-02 19:24:30] RDBMS: MySQL, version: 5.0.67-community-nt
[INFO ][2010-05-02 19:24:30] JDBC driver: MySQL-AB JDBC Driver, version: mysql-connector-java-5.0.8 ( Revision: ${svn.Revision} )
[INFO ][2010-05-02 19:24:30] Using dialect: org.hibernate.dialect.MySQLDialect
[INFO ][2010-05-02 19:24:30] Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[INFO ][2010-05-02 19:24:30] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[INFO ][2010-05-02 19:24:30] Automatic flush during beforeCompletion(): disabled
[INFO ][2010-05-02 19:24:30] Automatic session close at end of transaction: disabled
[INFO ][2010-05-02 19:24:30] JDBC batch size: 15
[INFO ][2010-05-02 19:24:30] JDBC batch updates for versioned data: disabled
[INFO ][2010-05-02 19:24:30] Scrollable result sets: enabled
[INFO ][2010-05-02 19:24:30] JDBC3 getGeneratedKeys(): enabled
[INFO ][2010-05-02 19:24:30] Connection release mode: auto
[INFO ][2010-05-02 19:24:30] Maximum outer join fetch depth: 2
[INFO ][2010-05-02 19:24:30] Default batch fetch size: 1
[INFO ][2010-05-02 19:24:30] Generate SQL with comments: disabled
[INFO ][2010-05-02 19:24:30] Order SQL updates by primary key: disabled
[INFO ][2010-05-02 19:24:30] Order SQL inserts for batching: disabled
[INFO ][2010-05-02 19:24:30] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[INFO ][2010-05-02 19:24:30] Using ASTQueryTranslatorFactory
[INFO ][2010-05-02 19:24:30] Query language substitutions: {}
[INFO ][2010-05-02 19:24:30] JPA-QL strict compliance: disabled
[INFO ][2010-05-02 19:24:30] Second-level cache: enabled
[INFO ][2010-05-02 19:24:30] Query cache: disabled
[INFO ][2010-05-02 19:24:30] Cache provider: org.hibernate.cache.NoCacheProvider
[INFO ][2010-05-02 19:24:30] Optimize cache for minimal puts: disabled
[INFO ][2010-05-02 19:24:30] Structured second-level cache entries: disabled
[INFO ][2010-05-02 19:24:30] Statistics: disabled
[INFO ][2010-05-02 19:24:30] Deleted entity synthetic identifier rollback: disabled
[INFO ][2010-05-02 19:24:30] Default entity-mode: pojo
[INFO ][2010-05-02 19:24:30] Named query checking : enabled
[INFO ][2010-05-02 19:24:30] building session factory
[INFO ][2010-05-02 19:24:31] Not binding factory to JNDI, no JNDI name configured
[INFO ][2010-05-02 20:09:40] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@958bb8: display name [org.springframework.context.support.ClassPathXmlApplicationContext@958bb8]; startup date [Sun May 02 20:09:40 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 20:09:40] Loading XML bean definitions from class path resource [applicationContextForTest.xml]
[INFO ][2010-05-02 20:09:40] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@958bb8]: org.springframework.beans.factory.support.DefaultListableBeanFactory@17200b4
[INFO ][2010-05-02 20:09:41] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@17200b4: defining beans [sessionFactory,PlacardDAO,StatementDAO,GossipDAO,ItemDAO,AlbumDAO,BlogDAO,UserDAO,PictureDAO,ReplyDAO,FriendsDAO,AdminDAO,loginAction]; root of factory hierarchy
[INFO ][2010-05-02 20:09:41] Hibernate 3.2.7
[INFO ][2010-05-02 20:09:41] hibernate.properties not found
[INFO ][2010-05-02 20:09:41] Bytecode provider name : cglib
[INFO ][2010-05-02 20:09:41] using JDK 1.4 java.sql.Timestamp handling
[INFO ][2010-05-02 20:09:41] configuring from url: file:/K:/SSD10/Project/GoodFriend/WebRoot/WEB-INF/classes/hibernate.cfg.xml
[INFO ][2010-05-02 20:09:41] Reading mappings from resource : com/goodfriend/model/Placard.hbm.xml
[INFO ][2010-05-02 20:09:41] Mapping class: com.goodfriend.model.Placard -> placard
[INFO ][2010-05-02 20:09:41] Reading mappings from resource : com/goodfriend/model/Statement.hbm.xml
[INFO ][2010-05-02 20:09:41] Mapping class: com.goodfriend.model.Statement -> statement
[INFO ][2010-05-02 20:09:41] Reading mappings from resource : com/goodfriend/model/Gossip.hbm.xml
[INFO ][2010-05-02 20:09:41] Mapping class: com.goodfriend.model.Gossip -> gossip
[INFO ][2010-05-02 20:09:41] Reading mappings from resource : com/goodfriend/model/Item.hbm.xml
[INFO ][2010-05-02 20:09:41] Mapping class: com.goodfriend.model.Item -> item
[INFO ][2010-05-02 20:09:41] Reading mappings from resource : com/goodfriend/model/Album.hbm.xml
[INFO ][2010-05-02 20:09:41] Mapping class: com.goodfriend.model.Album -> album
[INFO ][2010-05-02 20:09:41] Reading mappings from resource : com/goodfriend/model/Blog.hbm.xml
[INFO ][2010-05-02 20:09:41] Mapping class: com.goodfriend.model.Blog -> blog
[INFO ][2010-05-02 20:09:41] Reading mappings from resource : com/goodfriend/model/User.hbm.xml
[INFO ][2010-05-02 20:09:41] Mapping class: com.goodfriend.model.User -> user
[INFO ][2010-05-02 20:09:41] Reading mappings from resource : com/goodfriend/model/Picture.hbm.xml
[INFO ][2010-05-02 20:09:41] Mapping class: com.goodfriend.model.Picture -> picture
[INFO ][2010-05-02 20:09:41] Reading mappings from resource : com/goodfriend/model/Reply.hbm.xml
[INFO ][2010-05-02 20:09:41] Mapping class: com.goodfriend.model.Reply -> reply
[INFO ][2010-05-02 20:09:41] Reading mappings from resource : com/goodfriend/model/Friends.hbm.xml
[INFO ][2010-05-02 20:09:41] Mapping class: com.goodfriend.model.Friends -> friends
[INFO ][2010-05-02 20:09:41] Reading mappings from resource : com/goodfriend/model/Admin.hbm.xml
[INFO ][2010-05-02 20:09:41] Mapping class: com.goodfriend.model.Admin -> admin
[INFO ][2010-05-02 20:09:41] Configured SessionFactory: null
[INFO ][2010-05-02 20:09:41] Mapping collection: com.goodfriend.model.Item.gossips -> gossip
[INFO ][2010-05-02 20:09:41] Mapping collection: com.goodfriend.model.Item.pictures -> picture
[INFO ][2010-05-02 20:09:41] Mapping collection: com.goodfriend.model.Item.statements -> statement
[INFO ][2010-05-02 20:09:41] Mapping collection: com.goodfriend.model.Item.users -> user
[INFO ][2010-05-02 20:09:41] Mapping collection: com.goodfriend.model.Item.blogs -> blog
[INFO ][2010-05-02 20:09:41] Mapping collection: com.goodfriend.model.Item.replies -> reply
[INFO ][2010-05-02 20:09:41] Mapping collection: com.goodfriend.model.Item.albums -> album
[INFO ][2010-05-02 20:09:41] Mapping collection: com.goodfriend.model.Album.pictures -> picture
[INFO ][2010-05-02 20:09:41] Mapping collection: com.goodfriend.model.User.friendsesForFriendId -> friends
[INFO ][2010-05-02 20:09:41] Mapping collection: com.goodfriend.model.User.replies -> reply
[INFO ][2010-05-02 20:09:41] Mapping collection: com.goodfriend.model.User.friendsesForUserId -> friends
[INFO ][2010-05-02 20:09:41] Mapping collection: com.goodfriend.model.User.gossips -> gossip
[INFO ][2010-05-02 20:09:41] Building new Hibernate SessionFactory
[INFO ][2010-05-02 20:09:41] Using Hibernate built-in connection pool (not for production use!)
[INFO ][2010-05-02 20:09:41] Hibernate connection pool size: 20
[INFO ][2010-05-02 20:09:41] autocommit mode: false
[INFO ][2010-05-02 20:09:41] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/goodfriend
[INFO ][2010-05-02 20:09:41] connection properties: {user=root, password=****}
[INFO ][2010-05-02 20:09:42] RDBMS: MySQL, version: 5.0.67-community-nt
[INFO ][2010-05-02 20:09:42] JDBC driver: MySQL-AB JDBC Driver, version: mysql-connector-java-5.0.8 ( Revision: ${svn.Revision} )
[INFO ][2010-05-02 20:09:42] Using dialect: org.hibernate.dialect.MySQLDialect
[INFO ][2010-05-02 20:09:42] Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[INFO ][2010-05-02 20:09:42] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[INFO ][2010-05-02 20:09:42] Automatic flush during beforeCompletion(): disabled
[INFO ][2010-05-02 20:09:42] Automatic session close at end of transaction: disabled
[INFO ][2010-05-02 20:09:42] JDBC batch size: 15
[INFO ][2010-05-02 20:09:42] JDBC batch updates for versioned data: disabled
[INFO ][2010-05-02 20:09:42] Scrollable result sets: enabled
[INFO ][2010-05-02 20:09:42] JDBC3 getGeneratedKeys(): enabled
[INFO ][2010-05-02 20:09:42] Connection release mode: auto
[INFO ][2010-05-02 20:09:42] Maximum outer join fetch depth: 2
[INFO ][2010-05-02 20:09:42] Default batch fetch size: 1
[INFO ][2010-05-02 20:09:42] Generate SQL with comments: disabled
[INFO ][2010-05-02 20:09:42] Order SQL updates by primary key: disabled
[INFO ][2010-05-02 20:09:42] Order SQL inserts for batching: disabled
[INFO ][2010-05-02 20:09:42] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:09:42] Using ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:09:42] Query language substitutions: {}
[INFO ][2010-05-02 20:09:42] JPA-QL strict compliance: disabled
[INFO ][2010-05-02 20:09:42] Second-level cache: enabled
[INFO ][2010-05-02 20:09:42] Query cache: disabled
[INFO ][2010-05-02 20:09:42] Cache provider: org.hibernate.cache.NoCacheProvider
[INFO ][2010-05-02 20:09:42] Optimize cache for minimal puts: disabled
[INFO ][2010-05-02 20:09:42] Structured second-level cache entries: disabled
[INFO ][2010-05-02 20:09:42] Statistics: disabled
[INFO ][2010-05-02 20:09:42] Deleted entity synthetic identifier rollback: disabled
[INFO ][2010-05-02 20:09:42] Default entity-mode: pojo
[INFO ][2010-05-02 20:09:42] Named query checking : enabled
[INFO ][2010-05-02 20:09:42] building session factory
[INFO ][2010-05-02 20:09:43] Not binding factory to JNDI, no JNDI name configured
[INFO ][2010-05-02 20:09:43] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@767286: display name [org.springframework.context.support.ClassPathXmlApplicationContext@767286]; startup date [Sun May 02 20:09:43 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 20:09:43] Loading XML bean definitions from class path resource [applicationContextForTest.xml]
[INFO ][2010-05-02 20:09:43] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@767286]: org.springframework.beans.factory.support.DefaultListableBeanFactory@cab854
[INFO ][2010-05-02 20:09:43] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@cab854: defining beans [sessionFactory,PlacardDAO,StatementDAO,GossipDAO,ItemDAO,AlbumDAO,BlogDAO,UserDAO,PictureDAO,ReplyDAO,FriendsDAO,AdminDAO,loginAction]; root of factory hierarchy
[INFO ][2010-05-02 20:09:43] configuring from url: file:/K:/SSD10/Project/GoodFriend/WebRoot/WEB-INF/classes/hibernate.cfg.xml
[INFO ][2010-05-02 20:09:43] Reading mappings from resource : com/goodfriend/model/Placard.hbm.xml
[INFO ][2010-05-02 20:09:43] Mapping class: com.goodfriend.model.Placard -> placard
[INFO ][2010-05-02 20:09:43] Reading mappings from resource : com/goodfriend/model/Statement.hbm.xml
[INFO ][2010-05-02 20:09:43] Mapping class: com.goodfriend.model.Statement -> statement
[INFO ][2010-05-02 20:09:43] Reading mappings from resource : com/goodfriend/model/Gossip.hbm.xml
[INFO ][2010-05-02 20:09:43] Mapping class: com.goodfriend.model.Gossip -> gossip
[INFO ][2010-05-02 20:09:43] Reading mappings from resource : com/goodfriend/model/Item.hbm.xml
[INFO ][2010-05-02 20:09:43] Mapping class: com.goodfriend.model.Item -> item
[INFO ][2010-05-02 20:09:43] Reading mappings from resource : com/goodfriend/model/Album.hbm.xml
[INFO ][2010-05-02 20:09:43] Mapping class: com.goodfriend.model.Album -> album
[INFO ][2010-05-02 20:09:43] Reading mappings from resource : com/goodfriend/model/Blog.hbm.xml
[INFO ][2010-05-02 20:09:43] Mapping class: com.goodfriend.model.Blog -> blog
[INFO ][2010-05-02 20:09:43] Reading mappings from resource : com/goodfriend/model/User.hbm.xml
[INFO ][2010-05-02 20:09:43] Mapping class: com.goodfriend.model.User -> user
[INFO ][2010-05-02 20:09:43] Reading mappings from resource : com/goodfriend/model/Picture.hbm.xml
[INFO ][2010-05-02 20:09:43] Mapping class: com.goodfriend.model.Picture -> picture
[INFO ][2010-05-02 20:09:43] Reading mappings from resource : com/goodfriend/model/Reply.hbm.xml
[INFO ][2010-05-02 20:09:43] Mapping class: com.goodfriend.model.Reply -> reply
[INFO ][2010-05-02 20:09:43] Reading mappings from resource : com/goodfriend/model/Friends.hbm.xml
[INFO ][2010-05-02 20:09:43] Mapping class: com.goodfriend.model.Friends -> friends
[INFO ][2010-05-02 20:09:43] Reading mappings from resource : com/goodfriend/model/Admin.hbm.xml
[INFO ][2010-05-02 20:09:43] Mapping class: com.goodfriend.model.Admin -> admin
[INFO ][2010-05-02 20:09:43] Configured SessionFactory: null
[INFO ][2010-05-02 20:09:43] Mapping collection: com.goodfriend.model.Item.gossips -> gossip
[INFO ][2010-05-02 20:09:43] Mapping collection: com.goodfriend.model.Item.pictures -> picture
[INFO ][2010-05-02 20:09:43] Mapping collection: com.goodfriend.model.Item.statements -> statement
[INFO ][2010-05-02 20:09:43] Mapping collection: com.goodfriend.model.Item.users -> user
[INFO ][2010-05-02 20:09:43] Mapping collection: com.goodfriend.model.Item.blogs -> blog
[INFO ][2010-05-02 20:09:43] Mapping collection: com.goodfriend.model.Item.replies -> reply
[INFO ][2010-05-02 20:09:43] Mapping collection: com.goodfriend.model.Item.albums -> album
[INFO ][2010-05-02 20:09:43] Mapping collection: com.goodfriend.model.Album.pictures -> picture
[INFO ][2010-05-02 20:09:43] Mapping collection: com.goodfriend.model.User.friendsesForFriendId -> friends
[INFO ][2010-05-02 20:09:43] Mapping collection: com.goodfriend.model.User.replies -> reply
[INFO ][2010-05-02 20:09:43] Mapping collection: com.goodfriend.model.User.friendsesForUserId -> friends
[INFO ][2010-05-02 20:09:43] Mapping collection: com.goodfriend.model.User.gossips -> gossip
[INFO ][2010-05-02 20:09:43] Building new Hibernate SessionFactory
[INFO ][2010-05-02 20:09:43] Using Hibernate built-in connection pool (not for production use!)
[INFO ][2010-05-02 20:09:43] Hibernate connection pool size: 20
[INFO ][2010-05-02 20:09:43] autocommit mode: false
[INFO ][2010-05-02 20:09:43] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/goodfriend
[INFO ][2010-05-02 20:09:43] connection properties: {user=root, password=****}
[INFO ][2010-05-02 20:09:44] RDBMS: MySQL, version: 5.0.67-community-nt
[INFO ][2010-05-02 20:09:44] JDBC driver: MySQL-AB JDBC Driver, version: mysql-connector-java-5.0.8 ( Revision: ${svn.Revision} )
[INFO ][2010-05-02 20:09:44] Using dialect: org.hibernate.dialect.MySQLDialect
[INFO ][2010-05-02 20:09:44] Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[INFO ][2010-05-02 20:09:44] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[INFO ][2010-05-02 20:09:44] Automatic flush during beforeCompletion(): disabled
[INFO ][2010-05-02 20:09:44] Automatic session close at end of transaction: disabled
[INFO ][2010-05-02 20:09:44] JDBC batch size: 15
[INFO ][2010-05-02 20:09:44] JDBC batch updates for versioned data: disabled
[INFO ][2010-05-02 20:09:44] Scrollable result sets: enabled
[INFO ][2010-05-02 20:09:44] JDBC3 getGeneratedKeys(): enabled
[INFO ][2010-05-02 20:09:44] Connection release mode: auto
[INFO ][2010-05-02 20:09:44] Maximum outer join fetch depth: 2
[INFO ][2010-05-02 20:09:44] Default batch fetch size: 1
[INFO ][2010-05-02 20:09:44] Generate SQL with comments: disabled
[INFO ][2010-05-02 20:09:44] Order SQL updates by primary key: disabled
[INFO ][2010-05-02 20:09:44] Order SQL inserts for batching: disabled
[INFO ][2010-05-02 20:09:44] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:09:44] Using ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:09:44] Query language substitutions: {}
[INFO ][2010-05-02 20:09:44] JPA-QL strict compliance: disabled
[INFO ][2010-05-02 20:09:44] Second-level cache: enabled
[INFO ][2010-05-02 20:09:44] Query cache: disabled
[INFO ][2010-05-02 20:09:44] Cache provider: org.hibernate.cache.NoCacheProvider
[INFO ][2010-05-02 20:09:44] Optimize cache for minimal puts: disabled
[INFO ][2010-05-02 20:09:44] Structured second-level cache entries: disabled
[INFO ][2010-05-02 20:09:44] Statistics: disabled
[INFO ][2010-05-02 20:09:44] Deleted entity synthetic identifier rollback: disabled
[INFO ][2010-05-02 20:09:44] Default entity-mode: pojo
[INFO ][2010-05-02 20:09:44] Named query checking : enabled
[INFO ][2010-05-02 20:09:44] building session factory
[INFO ][2010-05-02 20:09:44] Not binding factory to JNDI, no JNDI name configured
[WARN ][2010-05-02 20:10:35] SQL Error: 1205, SQLState: 41000
[ERROR][2010-05-02 20:10:35] Lock wait timeout exceeded; try restarting transaction
[ERROR][2010-05-02 20:10:35] Could not synchronize database state with session
org.hibernate.exception.GenericJDBCException: Could not execute JDBC batch update
	at org.hibernate.exception.SQLStateConverter.handledNonSpecificException(SQLStateConverter.java:103)
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:91)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:43)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:254)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:266)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:167)
	at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:298)
	at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:27)
	at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1001)
	at org.springframework.orm.hibernate3.HibernateAccessor.flushIfNecessary(HibernateAccessor.java:390)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:420)
	at org.springframework.orm.hibernate3.HibernateTemplate.executeWithNativeSession(HibernateTemplate.java:374)
	at org.springframework.orm.hibernate3.HibernateTemplate.save(HibernateTemplate.java:694)
	at com.goodfriend.dao.impl.UserDAO.save(UserDAO.java:46)
	at com.goodfriend.dao.test.UserDAOTest.testDelete(UserDAOTest.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:73)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:46)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41)
	at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:220)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:46)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: java.sql.BatchUpdateException: Lock wait timeout exceeded; try restarting transaction
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:1269)
	at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:955)
	at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:48)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:247)
	... 35 more
[ERROR][2010-05-02 20:10:35] save failed
org.springframework.jdbc.UncategorizedSQLException: Hibernate operation: Could not execute JDBC batch update; uncategorized SQLException for SQL [insert into goodfriend.user (items, user_name, password, real_name, gender, birthday, phone, email, hoby, photo, id_user) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]; SQL state [41000]; error code [1205]; Lock wait timeout exceeded; try restarting transaction; nested exception is java.sql.BatchUpdateException: Lock wait timeout exceeded; try restarting transaction
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:83)
	at org.springframework.orm.hibernate3.HibernateAccessor.convertJdbcAccessException(HibernateAccessor.java:424)
	at org.springframework.orm.hibernate3.HibernateAccessor.convertHibernateAccessException(HibernateAccessor.java:410)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:424)
	at org.springframework.orm.hibernate3.HibernateTemplate.executeWithNativeSession(HibernateTemplate.java:374)
	at org.springframework.orm.hibernate3.HibernateTemplate.save(HibernateTemplate.java:694)
	at com.goodfriend.dao.impl.UserDAO.save(UserDAO.java:46)
	at com.goodfriend.dao.test.UserDAOTest.testDelete(UserDAOTest.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:73)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:46)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41)
	at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:220)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:46)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: java.sql.BatchUpdateException: Lock wait timeout exceeded; try restarting transaction
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:1269)
	at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:955)
	at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:48)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:247)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:266)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:167)
	at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:298)
	at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:27)
	at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1001)
	at org.springframework.orm.hibernate3.HibernateAccessor.flushIfNecessary(HibernateAccessor.java:390)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:420)
	... 28 more
[INFO ][2010-05-02 20:10:35] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@12dd76: display name [org.springframework.context.support.ClassPathXmlApplicationContext@12dd76]; startup date [Sun May 02 20:10:35 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 20:10:35] Loading XML bean definitions from class path resource [applicationContextForTest.xml]
[INFO ][2010-05-02 20:10:35] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@12dd76]: org.springframework.beans.factory.support.DefaultListableBeanFactory@5cc942
[INFO ][2010-05-02 20:10:35] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5cc942: defining beans [sessionFactory,PlacardDAO,StatementDAO,GossipDAO,ItemDAO,AlbumDAO,BlogDAO,UserDAO,PictureDAO,ReplyDAO,FriendsDAO,AdminDAO,loginAction]; root of factory hierarchy
[INFO ][2010-05-02 20:10:35] configuring from url: file:/K:/SSD10/Project/GoodFriend/WebRoot/WEB-INF/classes/hibernate.cfg.xml
[INFO ][2010-05-02 20:10:35] Reading mappings from resource : com/goodfriend/model/Placard.hbm.xml
[INFO ][2010-05-02 20:10:35] Mapping class: com.goodfriend.model.Placard -> placard
[INFO ][2010-05-02 20:10:35] Reading mappings from resource : com/goodfriend/model/Statement.hbm.xml
[INFO ][2010-05-02 20:10:35] Mapping class: com.goodfriend.model.Statement -> statement
[INFO ][2010-05-02 20:10:35] Reading mappings from resource : com/goodfriend/model/Gossip.hbm.xml
[INFO ][2010-05-02 20:10:35] Mapping class: com.goodfriend.model.Gossip -> gossip
[INFO ][2010-05-02 20:10:35] Reading mappings from resource : com/goodfriend/model/Item.hbm.xml
[INFO ][2010-05-02 20:10:35] Mapping class: com.goodfriend.model.Item -> item
[INFO ][2010-05-02 20:10:35] Reading mappings from resource : com/goodfriend/model/Album.hbm.xml
[INFO ][2010-05-02 20:10:35] Mapping class: com.goodfriend.model.Album -> album
[INFO ][2010-05-02 20:10:35] Reading mappings from resource : com/goodfriend/model/Blog.hbm.xml
[INFO ][2010-05-02 20:10:35] Mapping class: com.goodfriend.model.Blog -> blog
[INFO ][2010-05-02 20:10:35] Reading mappings from resource : com/goodfriend/model/User.hbm.xml
[INFO ][2010-05-02 20:10:35] Mapping class: com.goodfriend.model.User -> user
[INFO ][2010-05-02 20:10:35] Reading mappings from resource : com/goodfriend/model/Picture.hbm.xml
[INFO ][2010-05-02 20:10:36] Mapping class: com.goodfriend.model.Picture -> picture
[INFO ][2010-05-02 20:10:36] Reading mappings from resource : com/goodfriend/model/Reply.hbm.xml
[INFO ][2010-05-02 20:10:36] Mapping class: com.goodfriend.model.Reply -> reply
[INFO ][2010-05-02 20:10:36] Reading mappings from resource : com/goodfriend/model/Friends.hbm.xml
[INFO ][2010-05-02 20:10:36] Mapping class: com.goodfriend.model.Friends -> friends
[INFO ][2010-05-02 20:10:36] Reading mappings from resource : com/goodfriend/model/Admin.hbm.xml
[INFO ][2010-05-02 20:10:36] Mapping class: com.goodfriend.model.Admin -> admin
[INFO ][2010-05-02 20:10:36] Configured SessionFactory: null
[INFO ][2010-05-02 20:10:36] Mapping collection: com.goodfriend.model.Item.gossips -> gossip
[INFO ][2010-05-02 20:10:36] Mapping collection: com.goodfriend.model.Item.pictures -> picture
[INFO ][2010-05-02 20:10:36] Mapping collection: com.goodfriend.model.Item.statements -> statement
[INFO ][2010-05-02 20:10:36] Mapping collection: com.goodfriend.model.Item.users -> user
[INFO ][2010-05-02 20:10:36] Mapping collection: com.goodfriend.model.Item.blogs -> blog
[INFO ][2010-05-02 20:10:36] Mapping collection: com.goodfriend.model.Item.replies -> reply
[INFO ][2010-05-02 20:10:36] Mapping collection: com.goodfriend.model.Item.albums -> album
[INFO ][2010-05-02 20:10:36] Mapping collection: com.goodfriend.model.Album.pictures -> picture
[INFO ][2010-05-02 20:10:36] Mapping collection: com.goodfriend.model.User.friendsesForFriendId -> friends
[INFO ][2010-05-02 20:10:36] Mapping collection: com.goodfriend.model.User.replies -> reply
[INFO ][2010-05-02 20:10:36] Mapping collection: com.goodfriend.model.User.friendsesForUserId -> friends
[INFO ][2010-05-02 20:10:36] Mapping collection: com.goodfriend.model.User.gossips -> gossip
[INFO ][2010-05-02 20:10:36] Building new Hibernate SessionFactory
[INFO ][2010-05-02 20:10:36] Using Hibernate built-in connection pool (not for production use!)
[INFO ][2010-05-02 20:10:36] Hibernate connection pool size: 20
[INFO ][2010-05-02 20:10:36] autocommit mode: false
[INFO ][2010-05-02 20:10:36] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/goodfriend
[INFO ][2010-05-02 20:10:36] connection properties: {user=root, password=****}
[INFO ][2010-05-02 20:10:36] RDBMS: MySQL, version: 5.0.67-community-nt
[INFO ][2010-05-02 20:10:36] JDBC driver: MySQL-AB JDBC Driver, version: mysql-connector-java-5.0.8 ( Revision: ${svn.Revision} )
[INFO ][2010-05-02 20:10:36] Using dialect: org.hibernate.dialect.MySQLDialect
[INFO ][2010-05-02 20:10:36] Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[INFO ][2010-05-02 20:10:36] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[INFO ][2010-05-02 20:10:36] Automatic flush during beforeCompletion(): disabled
[INFO ][2010-05-02 20:10:36] Automatic session close at end of transaction: disabled
[INFO ][2010-05-02 20:10:36] JDBC batch size: 15
[INFO ][2010-05-02 20:10:36] JDBC batch updates for versioned data: disabled
[INFO ][2010-05-02 20:10:36] Scrollable result sets: enabled
[INFO ][2010-05-02 20:10:36] JDBC3 getGeneratedKeys(): enabled
[INFO ][2010-05-02 20:10:36] Connection release mode: auto
[INFO ][2010-05-02 20:10:36] Maximum outer join fetch depth: 2
[INFO ][2010-05-02 20:10:36] Default batch fetch size: 1
[INFO ][2010-05-02 20:10:36] Generate SQL with comments: disabled
[INFO ][2010-05-02 20:10:36] Order SQL updates by primary key: disabled
[INFO ][2010-05-02 20:10:36] Order SQL inserts for batching: disabled
[INFO ][2010-05-02 20:10:36] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:10:36] Using ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:10:36] Query language substitutions: {}
[INFO ][2010-05-02 20:10:36] JPA-QL strict compliance: disabled
[INFO ][2010-05-02 20:10:36] Second-level cache: enabled
[INFO ][2010-05-02 20:10:36] Query cache: disabled
[INFO ][2010-05-02 20:10:36] Cache provider: org.hibernate.cache.NoCacheProvider
[INFO ][2010-05-02 20:10:36] Optimize cache for minimal puts: disabled
[INFO ][2010-05-02 20:10:36] Structured second-level cache entries: disabled
[INFO ][2010-05-02 20:10:36] Statistics: disabled
[INFO ][2010-05-02 20:10:36] Deleted entity synthetic identifier rollback: disabled
[INFO ][2010-05-02 20:10:36] Default entity-mode: pojo
[INFO ][2010-05-02 20:10:36] Named query checking : enabled
[INFO ][2010-05-02 20:10:36] building session factory
[INFO ][2010-05-02 20:10:36] Not binding factory to JNDI, no JNDI name configured
[INFO ][2010-05-02 20:11:09] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@958bb8: display name [org.springframework.context.support.ClassPathXmlApplicationContext@958bb8]; startup date [Sun May 02 20:11:09 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 20:11:09] Loading XML bean definitions from class path resource [applicationContextForTest.xml]
[INFO ][2010-05-02 20:11:09] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@958bb8]: org.springframework.beans.factory.support.DefaultListableBeanFactory@17a4989
[INFO ][2010-05-02 20:11:10] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@17a4989: defining beans [sessionFactory,PlacardDAO,StatementDAO,GossipDAO,ItemDAO,AlbumDAO,BlogDAO,UserDAO,PictureDAO,ReplyDAO,FriendsDAO,AdminDAO,loginAction]; root of factory hierarchy
[INFO ][2010-05-02 20:11:10] Hibernate 3.2.7
[INFO ][2010-05-02 20:11:10] hibernate.properties not found
[INFO ][2010-05-02 20:11:10] Bytecode provider name : cglib
[INFO ][2010-05-02 20:11:10] using JDK 1.4 java.sql.Timestamp handling
[INFO ][2010-05-02 20:11:10] configuring from url: file:/K:/SSD10/Project/GoodFriend/WebRoot/WEB-INF/classes/hibernate.cfg.xml
[INFO ][2010-05-02 20:11:10] Reading mappings from resource : com/goodfriend/model/Placard.hbm.xml
[INFO ][2010-05-02 20:11:10] Mapping class: com.goodfriend.model.Placard -> placard
[INFO ][2010-05-02 20:11:10] Reading mappings from resource : com/goodfriend/model/Statement.hbm.xml
[INFO ][2010-05-02 20:11:10] Mapping class: com.goodfriend.model.Statement -> statement
[INFO ][2010-05-02 20:11:10] Reading mappings from resource : com/goodfriend/model/Gossip.hbm.xml
[INFO ][2010-05-02 20:11:10] Mapping class: com.goodfriend.model.Gossip -> gossip
[INFO ][2010-05-02 20:11:10] Reading mappings from resource : com/goodfriend/model/Item.hbm.xml
[INFO ][2010-05-02 20:11:10] Mapping class: com.goodfriend.model.Item -> item
[INFO ][2010-05-02 20:11:10] Reading mappings from resource : com/goodfriend/model/Album.hbm.xml
[INFO ][2010-05-02 20:11:10] Mapping class: com.goodfriend.model.Album -> album
[INFO ][2010-05-02 20:11:10] Reading mappings from resource : com/goodfriend/model/Blog.hbm.xml
[INFO ][2010-05-02 20:11:10] Mapping class: com.goodfriend.model.Blog -> blog
[INFO ][2010-05-02 20:11:10] Reading mappings from resource : com/goodfriend/model/User.hbm.xml
[INFO ][2010-05-02 20:11:10] Mapping class: com.goodfriend.model.User -> user
[INFO ][2010-05-02 20:11:10] Reading mappings from resource : com/goodfriend/model/Picture.hbm.xml
[INFO ][2010-05-02 20:11:10] Mapping class: com.goodfriend.model.Picture -> picture
[INFO ][2010-05-02 20:11:10] Reading mappings from resource : com/goodfriend/model/Reply.hbm.xml
[INFO ][2010-05-02 20:11:10] Mapping class: com.goodfriend.model.Reply -> reply
[INFO ][2010-05-02 20:11:10] Reading mappings from resource : com/goodfriend/model/Friends.hbm.xml
[INFO ][2010-05-02 20:11:10] Mapping class: com.goodfriend.model.Friends -> friends
[INFO ][2010-05-02 20:11:10] Reading mappings from resource : com/goodfriend/model/Admin.hbm.xml
[INFO ][2010-05-02 20:11:10] Mapping class: com.goodfriend.model.Admin -> admin
[INFO ][2010-05-02 20:11:10] Configured SessionFactory: null
[INFO ][2010-05-02 20:11:10] Mapping collection: com.goodfriend.model.Item.gossips -> gossip
[INFO ][2010-05-02 20:11:10] Mapping collection: com.goodfriend.model.Item.pictures -> picture
[INFO ][2010-05-02 20:11:10] Mapping collection: com.goodfriend.model.Item.statements -> statement
[INFO ][2010-05-02 20:11:10] Mapping collection: com.goodfriend.model.Item.users -> user
[INFO ][2010-05-02 20:11:10] Mapping collection: com.goodfriend.model.Item.blogs -> blog
[INFO ][2010-05-02 20:11:10] Mapping collection: com.goodfriend.model.Item.replies -> reply
[INFO ][2010-05-02 20:11:10] Mapping collection: com.goodfriend.model.Item.albums -> album
[INFO ][2010-05-02 20:11:10] Mapping collection: com.goodfriend.model.Album.pictures -> picture
[INFO ][2010-05-02 20:11:10] Mapping collection: com.goodfriend.model.User.friendsesForFriendId -> friends
[INFO ][2010-05-02 20:11:10] Mapping collection: com.goodfriend.model.User.replies -> reply
[INFO ][2010-05-02 20:11:10] Mapping collection: com.goodfriend.model.User.friendsesForUserId -> friends
[INFO ][2010-05-02 20:11:10] Mapping collection: com.goodfriend.model.User.gossips -> gossip
[INFO ][2010-05-02 20:11:10] Building new Hibernate SessionFactory
[INFO ][2010-05-02 20:11:10] Using Hibernate built-in connection pool (not for production use!)
[INFO ][2010-05-02 20:11:10] Hibernate connection pool size: 20
[INFO ][2010-05-02 20:11:10] autocommit mode: false
[INFO ][2010-05-02 20:11:10] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/goodfriend
[INFO ][2010-05-02 20:11:10] connection properties: {user=root, password=****}
[INFO ][2010-05-02 20:11:11] RDBMS: MySQL, version: 5.0.67-community-nt
[INFO ][2010-05-02 20:11:11] JDBC driver: MySQL-AB JDBC Driver, version: mysql-connector-java-5.0.8 ( Revision: ${svn.Revision} )
[INFO ][2010-05-02 20:11:11] Using dialect: org.hibernate.dialect.MySQLDialect
[INFO ][2010-05-02 20:11:11] Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[INFO ][2010-05-02 20:11:11] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[INFO ][2010-05-02 20:11:11] Automatic flush during beforeCompletion(): disabled
[INFO ][2010-05-02 20:11:11] Automatic session close at end of transaction: disabled
[INFO ][2010-05-02 20:11:11] JDBC batch size: 15
[INFO ][2010-05-02 20:11:11] JDBC batch updates for versioned data: disabled
[INFO ][2010-05-02 20:11:11] Scrollable result sets: enabled
[INFO ][2010-05-02 20:11:11] JDBC3 getGeneratedKeys(): enabled
[INFO ][2010-05-02 20:11:11] Connection release mode: auto
[INFO ][2010-05-02 20:11:11] Maximum outer join fetch depth: 2
[INFO ][2010-05-02 20:11:11] Default batch fetch size: 1
[INFO ][2010-05-02 20:11:11] Generate SQL with comments: disabled
[INFO ][2010-05-02 20:11:11] Order SQL updates by primary key: disabled
[INFO ][2010-05-02 20:11:11] Order SQL inserts for batching: disabled
[INFO ][2010-05-02 20:11:11] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:11:11] Using ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:11:11] Query language substitutions: {}
[INFO ][2010-05-02 20:11:11] JPA-QL strict compliance: disabled
[INFO ][2010-05-02 20:11:11] Second-level cache: enabled
[INFO ][2010-05-02 20:11:11] Query cache: disabled
[INFO ][2010-05-02 20:11:11] Cache provider: org.hibernate.cache.NoCacheProvider
[INFO ][2010-05-02 20:11:11] Optimize cache for minimal puts: disabled
[INFO ][2010-05-02 20:11:11] Structured second-level cache entries: disabled
[INFO ][2010-05-02 20:11:11] Statistics: disabled
[INFO ][2010-05-02 20:11:11] Deleted entity synthetic identifier rollback: disabled
[INFO ][2010-05-02 20:11:11] Default entity-mode: pojo
[INFO ][2010-05-02 20:11:11] Named query checking : enabled
[INFO ][2010-05-02 20:11:11] building session factory
[INFO ][2010-05-02 20:11:11] Not binding factory to JNDI, no JNDI name configured
[WARN ][2010-05-02 20:11:27] SQL Error: 1205, SQLState: 41000
[ERROR][2010-05-02 20:11:27] Lock wait timeout exceeded; try restarting transaction
[ERROR][2010-05-02 20:11:27] Could not synchronize database state with session
org.hibernate.exception.GenericJDBCException: Could not execute JDBC batch update
	at org.hibernate.exception.SQLStateConverter.handledNonSpecificException(SQLStateConverter.java:103)
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:91)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:43)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:254)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:266)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:167)
	at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:298)
	at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:27)
	at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1001)
	at org.springframework.orm.hibernate3.HibernateAccessor.flushIfNecessary(HibernateAccessor.java:390)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:420)
	at org.springframework.orm.hibernate3.HibernateTemplate.executeWithNativeSession(HibernateTemplate.java:374)
	at org.springframework.orm.hibernate3.HibernateTemplate.save(HibernateTemplate.java:694)
	at com.goodfriend.dao.impl.UserDAO.save(UserDAO.java:46)
	at com.goodfriend.dao.test.UserDAOTest.testFindById(UserDAOTest.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:73)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:46)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41)
	at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:220)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:46)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: java.sql.BatchUpdateException: Lock wait timeout exceeded; try restarting transaction
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:1269)
	at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:955)
	at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:48)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:247)
	... 35 more
[ERROR][2010-05-02 20:11:27] save failed
org.springframework.jdbc.UncategorizedSQLException: Hibernate operation: Could not execute JDBC batch update; uncategorized SQLException for SQL [insert into goodfriend.user (items, user_name, password, real_name, gender, birthday, phone, email, hoby, photo, id_user) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]; SQL state [41000]; error code [1205]; Lock wait timeout exceeded; try restarting transaction; nested exception is java.sql.BatchUpdateException: Lock wait timeout exceeded; try restarting transaction
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:83)
	at org.springframework.orm.hibernate3.HibernateAccessor.convertJdbcAccessException(HibernateAccessor.java:424)
	at org.springframework.orm.hibernate3.HibernateAccessor.convertHibernateAccessException(HibernateAccessor.java:410)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:424)
	at org.springframework.orm.hibernate3.HibernateTemplate.executeWithNativeSession(HibernateTemplate.java:374)
	at org.springframework.orm.hibernate3.HibernateTemplate.save(HibernateTemplate.java:694)
	at com.goodfriend.dao.impl.UserDAO.save(UserDAO.java:46)
	at com.goodfriend.dao.test.UserDAOTest.testFindById(UserDAOTest.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:73)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:46)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41)
	at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:220)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:46)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: java.sql.BatchUpdateException: Lock wait timeout exceeded; try restarting transaction
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:1269)
	at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:955)
	at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:48)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:247)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:266)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:167)
	at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:298)
	at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:27)
	at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1001)
	at org.springframework.orm.hibernate3.HibernateAccessor.flushIfNecessary(HibernateAccessor.java:390)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:420)
	... 28 more
[INFO ][2010-05-02 20:11:42] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@958bb8: display name [org.springframework.context.support.ClassPathXmlApplicationContext@958bb8]; startup date [Sun May 02 20:11:42 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 20:11:42] Loading XML bean definitions from class path resource [applicationContextForTest.xml]
[INFO ][2010-05-02 20:11:42] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@958bb8]: org.springframework.beans.factory.support.DefaultListableBeanFactory@17a4989
[INFO ][2010-05-02 20:11:43] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@17a4989: defining beans [sessionFactory,PlacardDAO,StatementDAO,GossipDAO,ItemDAO,AlbumDAO,BlogDAO,UserDAO,PictureDAO,ReplyDAO,FriendsDAO,AdminDAO,loginAction]; root of factory hierarchy
[INFO ][2010-05-02 20:11:43] Hibernate 3.2.7
[INFO ][2010-05-02 20:11:43] hibernate.properties not found
[INFO ][2010-05-02 20:11:43] Bytecode provider name : cglib
[INFO ][2010-05-02 20:11:43] using JDK 1.4 java.sql.Timestamp handling
[INFO ][2010-05-02 20:11:43] configuring from url: file:/K:/SSD10/Project/GoodFriend/WebRoot/WEB-INF/classes/hibernate.cfg.xml
[INFO ][2010-05-02 20:11:43] Reading mappings from resource : com/goodfriend/model/Placard.hbm.xml
[INFO ][2010-05-02 20:11:43] Mapping class: com.goodfriend.model.Placard -> placard
[INFO ][2010-05-02 20:11:43] Reading mappings from resource : com/goodfriend/model/Statement.hbm.xml
[INFO ][2010-05-02 20:11:43] Mapping class: com.goodfriend.model.Statement -> statement
[INFO ][2010-05-02 20:11:43] Reading mappings from resource : com/goodfriend/model/Gossip.hbm.xml
[INFO ][2010-05-02 20:11:43] Mapping class: com.goodfriend.model.Gossip -> gossip
[INFO ][2010-05-02 20:11:43] Reading mappings from resource : com/goodfriend/model/Item.hbm.xml
[INFO ][2010-05-02 20:11:43] Mapping class: com.goodfriend.model.Item -> item
[INFO ][2010-05-02 20:11:43] Reading mappings from resource : com/goodfriend/model/Album.hbm.xml
[INFO ][2010-05-02 20:11:43] Mapping class: com.goodfriend.model.Album -> album
[INFO ][2010-05-02 20:11:43] Reading mappings from resource : com/goodfriend/model/Blog.hbm.xml
[INFO ][2010-05-02 20:11:43] Mapping class: com.goodfriend.model.Blog -> blog
[INFO ][2010-05-02 20:11:43] Reading mappings from resource : com/goodfriend/model/User.hbm.xml
[INFO ][2010-05-02 20:11:44] Mapping class: com.goodfriend.model.User -> user
[INFO ][2010-05-02 20:11:44] Reading mappings from resource : com/goodfriend/model/Picture.hbm.xml
[INFO ][2010-05-02 20:11:44] Mapping class: com.goodfriend.model.Picture -> picture
[INFO ][2010-05-02 20:11:44] Reading mappings from resource : com/goodfriend/model/Reply.hbm.xml
[INFO ][2010-05-02 20:11:44] Mapping class: com.goodfriend.model.Reply -> reply
[INFO ][2010-05-02 20:11:44] Reading mappings from resource : com/goodfriend/model/Friends.hbm.xml
[INFO ][2010-05-02 20:11:44] Mapping class: com.goodfriend.model.Friends -> friends
[INFO ][2010-05-02 20:11:44] Reading mappings from resource : com/goodfriend/model/Admin.hbm.xml
[INFO ][2010-05-02 20:11:44] Mapping class: com.goodfriend.model.Admin -> admin
[INFO ][2010-05-02 20:11:44] Configured SessionFactory: null
[INFO ][2010-05-02 20:11:44] Mapping collection: com.goodfriend.model.Item.gossips -> gossip
[INFO ][2010-05-02 20:11:44] Mapping collection: com.goodfriend.model.Item.pictures -> picture
[INFO ][2010-05-02 20:11:44] Mapping collection: com.goodfriend.model.Item.statements -> statement
[INFO ][2010-05-02 20:11:44] Mapping collection: com.goodfriend.model.Item.users -> user
[INFO ][2010-05-02 20:11:44] Mapping collection: com.goodfriend.model.Item.blogs -> blog
[INFO ][2010-05-02 20:11:44] Mapping collection: com.goodfriend.model.Item.replies -> reply
[INFO ][2010-05-02 20:11:44] Mapping collection: com.goodfriend.model.Item.albums -> album
[INFO ][2010-05-02 20:11:44] Mapping collection: com.goodfriend.model.Album.pictures -> picture
[INFO ][2010-05-02 20:11:44] Mapping collection: com.goodfriend.model.User.friendsesForFriendId -> friends
[INFO ][2010-05-02 20:11:44] Mapping collection: com.goodfriend.model.User.replies -> reply
[INFO ][2010-05-02 20:11:44] Mapping collection: com.goodfriend.model.User.friendsesForUserId -> friends
[INFO ][2010-05-02 20:11:44] Mapping collection: com.goodfriend.model.User.gossips -> gossip
[INFO ][2010-05-02 20:11:44] Building new Hibernate SessionFactory
[INFO ][2010-05-02 20:11:44] Using Hibernate built-in connection pool (not for production use!)
[INFO ][2010-05-02 20:11:44] Hibernate connection pool size: 20
[INFO ][2010-05-02 20:11:44] autocommit mode: false
[INFO ][2010-05-02 20:11:44] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/goodfriend
[INFO ][2010-05-02 20:11:44] connection properties: {user=root, password=****}
[INFO ][2010-05-02 20:11:44] RDBMS: MySQL, version: 5.0.67-community-nt
[INFO ][2010-05-02 20:11:44] JDBC driver: MySQL-AB JDBC Driver, version: mysql-connector-java-5.0.8 ( Revision: ${svn.Revision} )
[INFO ][2010-05-02 20:11:44] Using dialect: org.hibernate.dialect.MySQLDialect
[INFO ][2010-05-02 20:11:44] Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[INFO ][2010-05-02 20:11:44] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[INFO ][2010-05-02 20:11:44] Automatic flush during beforeCompletion(): disabled
[INFO ][2010-05-02 20:11:44] Automatic session close at end of transaction: disabled
[INFO ][2010-05-02 20:11:44] JDBC batch size: 15
[INFO ][2010-05-02 20:11:44] JDBC batch updates for versioned data: disabled
[INFO ][2010-05-02 20:11:44] Scrollable result sets: enabled
[INFO ][2010-05-02 20:11:44] JDBC3 getGeneratedKeys(): enabled
[INFO ][2010-05-02 20:11:44] Connection release mode: auto
[INFO ][2010-05-02 20:11:44] Maximum outer join fetch depth: 2
[INFO ][2010-05-02 20:11:44] Default batch fetch size: 1
[INFO ][2010-05-02 20:11:44] Generate SQL with comments: disabled
[INFO ][2010-05-02 20:11:44] Order SQL updates by primary key: disabled
[INFO ][2010-05-02 20:11:44] Order SQL inserts for batching: disabled
[INFO ][2010-05-02 20:11:44] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:11:44] Using ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:11:44] Query language substitutions: {}
[INFO ][2010-05-02 20:11:44] JPA-QL strict compliance: disabled
[INFO ][2010-05-02 20:11:44] Second-level cache: enabled
[INFO ][2010-05-02 20:11:44] Query cache: disabled
[INFO ][2010-05-02 20:11:44] Cache provider: org.hibernate.cache.NoCacheProvider
[INFO ][2010-05-02 20:11:44] Optimize cache for minimal puts: disabled
[INFO ][2010-05-02 20:11:44] Structured second-level cache entries: disabled
[INFO ][2010-05-02 20:11:44] Statistics: disabled
[INFO ][2010-05-02 20:11:44] Deleted entity synthetic identifier rollback: disabled
[INFO ][2010-05-02 20:11:44] Default entity-mode: pojo
[INFO ][2010-05-02 20:11:44] Named query checking : enabled
[INFO ][2010-05-02 20:11:44] building session factory
[INFO ][2010-05-02 20:11:45] Not binding factory to JNDI, no JNDI name configured
[INFO ][2010-05-02 20:12:25] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@958bb8: display name [org.springframework.context.support.ClassPathXmlApplicationContext@958bb8]; startup date [Sun May 02 20:12:25 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 20:12:25] Loading XML bean definitions from class path resource [applicationContextForTest.xml]
[INFO ][2010-05-02 20:12:25] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@958bb8]: org.springframework.beans.factory.support.DefaultListableBeanFactory@17a4989
[INFO ][2010-05-02 20:12:26] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@17a4989: defining beans [sessionFactory,PlacardDAO,StatementDAO,GossipDAO,ItemDAO,AlbumDAO,BlogDAO,UserDAO,PictureDAO,ReplyDAO,FriendsDAO,AdminDAO,loginAction]; root of factory hierarchy
[INFO ][2010-05-02 20:12:26] Hibernate 3.2.7
[INFO ][2010-05-02 20:12:26] hibernate.properties not found
[INFO ][2010-05-02 20:12:26] Bytecode provider name : cglib
[INFO ][2010-05-02 20:12:26] using JDK 1.4 java.sql.Timestamp handling
[INFO ][2010-05-02 20:12:26] configuring from url: file:/K:/SSD10/Project/GoodFriend/WebRoot/WEB-INF/classes/hibernate.cfg.xml
[INFO ][2010-05-02 20:12:26] Reading mappings from resource : com/goodfriend/model/Placard.hbm.xml
[INFO ][2010-05-02 20:12:26] Mapping class: com.goodfriend.model.Placard -> placard
[INFO ][2010-05-02 20:12:26] Reading mappings from resource : com/goodfriend/model/Statement.hbm.xml
[INFO ][2010-05-02 20:12:26] Mapping class: com.goodfriend.model.Statement -> statement
[INFO ][2010-05-02 20:12:26] Reading mappings from resource : com/goodfriend/model/Gossip.hbm.xml
[INFO ][2010-05-02 20:12:26] Mapping class: com.goodfriend.model.Gossip -> gossip
[INFO ][2010-05-02 20:12:26] Reading mappings from resource : com/goodfriend/model/Item.hbm.xml
[INFO ][2010-05-02 20:12:26] Mapping class: com.goodfriend.model.Item -> item
[INFO ][2010-05-02 20:12:26] Reading mappings from resource : com/goodfriend/model/Album.hbm.xml
[INFO ][2010-05-02 20:12:26] Mapping class: com.goodfriend.model.Album -> album
[INFO ][2010-05-02 20:12:26] Reading mappings from resource : com/goodfriend/model/Blog.hbm.xml
[INFO ][2010-05-02 20:12:26] Mapping class: com.goodfriend.model.Blog -> blog
[INFO ][2010-05-02 20:12:26] Reading mappings from resource : com/goodfriend/model/User.hbm.xml
[INFO ][2010-05-02 20:12:26] Mapping class: com.goodfriend.model.User -> user
[INFO ][2010-05-02 20:12:26] Reading mappings from resource : com/goodfriend/model/Picture.hbm.xml
[INFO ][2010-05-02 20:12:26] Mapping class: com.goodfriend.model.Picture -> picture
[INFO ][2010-05-02 20:12:26] Reading mappings from resource : com/goodfriend/model/Reply.hbm.xml
[INFO ][2010-05-02 20:12:26] Mapping class: com.goodfriend.model.Reply -> reply
[INFO ][2010-05-02 20:12:26] Reading mappings from resource : com/goodfriend/model/Friends.hbm.xml
[INFO ][2010-05-02 20:12:26] Mapping class: com.goodfriend.model.Friends -> friends
[INFO ][2010-05-02 20:12:26] Reading mappings from resource : com/goodfriend/model/Admin.hbm.xml
[INFO ][2010-05-02 20:12:26] Mapping class: com.goodfriend.model.Admin -> admin
[INFO ][2010-05-02 20:12:26] Configured SessionFactory: null
[INFO ][2010-05-02 20:12:26] Mapping collection: com.goodfriend.model.Item.gossips -> gossip
[INFO ][2010-05-02 20:12:26] Mapping collection: com.goodfriend.model.Item.pictures -> picture
[INFO ][2010-05-02 20:12:26] Mapping collection: com.goodfriend.model.Item.statements -> statement
[INFO ][2010-05-02 20:12:26] Mapping collection: com.goodfriend.model.Item.users -> user
[INFO ][2010-05-02 20:12:26] Mapping collection: com.goodfriend.model.Item.blogs -> blog
[INFO ][2010-05-02 20:12:26] Mapping collection: com.goodfriend.model.Item.replies -> reply
[INFO ][2010-05-02 20:12:26] Mapping collection: com.goodfriend.model.Item.albums -> album
[INFO ][2010-05-02 20:12:26] Mapping collection: com.goodfriend.model.Album.pictures -> picture
[INFO ][2010-05-02 20:12:26] Mapping collection: com.goodfriend.model.User.friendsesForFriendId -> friends
[INFO ][2010-05-02 20:12:26] Mapping collection: com.goodfriend.model.User.replies -> reply
[INFO ][2010-05-02 20:12:26] Mapping collection: com.goodfriend.model.User.friendsesForUserId -> friends
[INFO ][2010-05-02 20:12:26] Mapping collection: com.goodfriend.model.User.gossips -> gossip
[INFO ][2010-05-02 20:12:26] Building new Hibernate SessionFactory
[INFO ][2010-05-02 20:12:26] Using Hibernate built-in connection pool (not for production use!)
[INFO ][2010-05-02 20:12:26] Hibernate connection pool size: 20
[INFO ][2010-05-02 20:12:26] autocommit mode: false
[INFO ][2010-05-02 20:12:27] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/goodfriend
[INFO ][2010-05-02 20:12:27] connection properties: {user=root, password=****}
[INFO ][2010-05-02 20:12:27] RDBMS: MySQL, version: 5.0.67-community-nt
[INFO ][2010-05-02 20:12:27] JDBC driver: MySQL-AB JDBC Driver, version: mysql-connector-java-5.0.8 ( Revision: ${svn.Revision} )
[INFO ][2010-05-02 20:12:27] Using dialect: org.hibernate.dialect.MySQLDialect
[INFO ][2010-05-02 20:12:27] Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[INFO ][2010-05-02 20:12:27] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[INFO ][2010-05-02 20:12:27] Automatic flush during beforeCompletion(): disabled
[INFO ][2010-05-02 20:12:27] Automatic session close at end of transaction: disabled
[INFO ][2010-05-02 20:12:27] JDBC batch size: 15
[INFO ][2010-05-02 20:12:27] JDBC batch updates for versioned data: disabled
[INFO ][2010-05-02 20:12:27] Scrollable result sets: enabled
[INFO ][2010-05-02 20:12:27] JDBC3 getGeneratedKeys(): enabled
[INFO ][2010-05-02 20:12:27] Connection release mode: auto
[INFO ][2010-05-02 20:12:27] Maximum outer join fetch depth: 2
[INFO ][2010-05-02 20:12:27] Default batch fetch size: 1
[INFO ][2010-05-02 20:12:27] Generate SQL with comments: disabled
[INFO ][2010-05-02 20:12:27] Order SQL updates by primary key: disabled
[INFO ][2010-05-02 20:12:27] Order SQL inserts for batching: disabled
[INFO ][2010-05-02 20:12:27] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:12:27] Using ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:12:27] Query language substitutions: {}
[INFO ][2010-05-02 20:12:27] JPA-QL strict compliance: disabled
[INFO ][2010-05-02 20:12:27] Second-level cache: enabled
[INFO ][2010-05-02 20:12:27] Query cache: disabled
[INFO ][2010-05-02 20:12:27] Cache provider: org.hibernate.cache.NoCacheProvider
[INFO ][2010-05-02 20:12:27] Optimize cache for minimal puts: disabled
[INFO ][2010-05-02 20:12:27] Structured second-level cache entries: disabled
[INFO ][2010-05-02 20:12:27] Statistics: disabled
[INFO ][2010-05-02 20:12:27] Deleted entity synthetic identifier rollback: disabled
[INFO ][2010-05-02 20:12:27] Default entity-mode: pojo
[INFO ][2010-05-02 20:12:27] Named query checking : enabled
[INFO ][2010-05-02 20:12:27] building session factory
[INFO ][2010-05-02 20:12:27] Not binding factory to JNDI, no JNDI name configured
[INFO ][2010-05-02 20:12:28] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@58e2a1: display name [org.springframework.context.support.ClassPathXmlApplicationContext@58e2a1]; startup date [Sun May 02 20:12:28 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 20:12:28] Loading XML bean definitions from class path resource [applicationContextForTest.xml]
[INFO ][2010-05-02 20:12:28] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@58e2a1]: org.springframework.beans.factory.support.DefaultListableBeanFactory@10bbd42
[INFO ][2010-05-02 20:12:28] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@10bbd42: defining beans [sessionFactory,PlacardDAO,StatementDAO,GossipDAO,ItemDAO,AlbumDAO,BlogDAO,UserDAO,PictureDAO,ReplyDAO,FriendsDAO,AdminDAO,loginAction]; root of factory hierarchy
[INFO ][2010-05-02 20:12:28] configuring from url: file:/K:/SSD10/Project/GoodFriend/WebRoot/WEB-INF/classes/hibernate.cfg.xml
[INFO ][2010-05-02 20:12:28] Reading mappings from resource : com/goodfriend/model/Placard.hbm.xml
[INFO ][2010-05-02 20:12:28] Mapping class: com.goodfriend.model.Placard -> placard
[INFO ][2010-05-02 20:12:28] Reading mappings from resource : com/goodfriend/model/Statement.hbm.xml
[INFO ][2010-05-02 20:12:28] Mapping class: com.goodfriend.model.Statement -> statement
[INFO ][2010-05-02 20:12:28] Reading mappings from resource : com/goodfriend/model/Gossip.hbm.xml
[INFO ][2010-05-02 20:12:28] Mapping class: com.goodfriend.model.Gossip -> gossip
[INFO ][2010-05-02 20:12:28] Reading mappings from resource : com/goodfriend/model/Item.hbm.xml
[INFO ][2010-05-02 20:12:28] Mapping class: com.goodfriend.model.Item -> item
[INFO ][2010-05-02 20:12:28] Reading mappings from resource : com/goodfriend/model/Album.hbm.xml
[INFO ][2010-05-02 20:12:28] Mapping class: com.goodfriend.model.Album -> album
[INFO ][2010-05-02 20:12:28] Reading mappings from resource : com/goodfriend/model/Blog.hbm.xml
[INFO ][2010-05-02 20:12:28] Mapping class: com.goodfriend.model.Blog -> blog
[INFO ][2010-05-02 20:12:28] Reading mappings from resource : com/goodfriend/model/User.hbm.xml
[INFO ][2010-05-02 20:12:28] Mapping class: com.goodfriend.model.User -> user
[INFO ][2010-05-02 20:12:28] Reading mappings from resource : com/goodfriend/model/Picture.hbm.xml
[INFO ][2010-05-02 20:12:28] Mapping class: com.goodfriend.model.Picture -> picture
[INFO ][2010-05-02 20:12:28] Reading mappings from resource : com/goodfriend/model/Reply.hbm.xml
[INFO ][2010-05-02 20:12:28] Mapping class: com.goodfriend.model.Reply -> reply
[INFO ][2010-05-02 20:12:28] Reading mappings from resource : com/goodfriend/model/Friends.hbm.xml
[INFO ][2010-05-02 20:12:28] Mapping class: com.goodfriend.model.Friends -> friends
[INFO ][2010-05-02 20:12:28] Reading mappings from resource : com/goodfriend/model/Admin.hbm.xml
[INFO ][2010-05-02 20:12:28] Mapping class: com.goodfriend.model.Admin -> admin
[INFO ][2010-05-02 20:12:28] Configured SessionFactory: null
[INFO ][2010-05-02 20:12:28] Mapping collection: com.goodfriend.model.Item.gossips -> gossip
[INFO ][2010-05-02 20:12:28] Mapping collection: com.goodfriend.model.Item.pictures -> picture
[INFO ][2010-05-02 20:12:28] Mapping collection: com.goodfriend.model.Item.statements -> statement
[INFO ][2010-05-02 20:12:28] Mapping collection: com.goodfriend.model.Item.users -> user
[INFO ][2010-05-02 20:12:28] Mapping collection: com.goodfriend.model.Item.blogs -> blog
[INFO ][2010-05-02 20:12:28] Mapping collection: com.goodfriend.model.Item.replies -> reply
[INFO ][2010-05-02 20:12:28] Mapping collection: com.goodfriend.model.Item.albums -> album
[INFO ][2010-05-02 20:12:28] Mapping collection: com.goodfriend.model.Album.pictures -> picture
[INFO ][2010-05-02 20:12:28] Mapping collection: com.goodfriend.model.User.friendsesForFriendId -> friends
[INFO ][2010-05-02 20:12:28] Mapping collection: com.goodfriend.model.User.replies -> reply
[INFO ][2010-05-02 20:12:28] Mapping collection: com.goodfriend.model.User.friendsesForUserId -> friends
[INFO ][2010-05-02 20:12:28] Mapping collection: com.goodfriend.model.User.gossips -> gossip
[INFO ][2010-05-02 20:12:28] Building new Hibernate SessionFactory
[INFO ][2010-05-02 20:12:28] Using Hibernate built-in connection pool (not for production use!)
[INFO ][2010-05-02 20:12:28] Hibernate connection pool size: 20
[INFO ][2010-05-02 20:12:28] autocommit mode: false
[INFO ][2010-05-02 20:12:28] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/goodfriend
[INFO ][2010-05-02 20:12:28] connection properties: {user=root, password=****}
[INFO ][2010-05-02 20:12:28] RDBMS: MySQL, version: 5.0.67-community-nt
[INFO ][2010-05-02 20:12:28] JDBC driver: MySQL-AB JDBC Driver, version: mysql-connector-java-5.0.8 ( Revision: ${svn.Revision} )
[INFO ][2010-05-02 20:12:28] Using dialect: org.hibernate.dialect.MySQLDialect
[INFO ][2010-05-02 20:12:28] Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[INFO ][2010-05-02 20:12:28] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[INFO ][2010-05-02 20:12:28] Automatic flush during beforeCompletion(): disabled
[INFO ][2010-05-02 20:12:28] Automatic session close at end of transaction: disabled
[INFO ][2010-05-02 20:12:28] JDBC batch size: 15
[INFO ][2010-05-02 20:12:28] JDBC batch updates for versioned data: disabled
[INFO ][2010-05-02 20:12:28] Scrollable result sets: enabled
[INFO ][2010-05-02 20:12:28] JDBC3 getGeneratedKeys(): enabled
[INFO ][2010-05-02 20:12:28] Connection release mode: auto
[INFO ][2010-05-02 20:12:28] Maximum outer join fetch depth: 2
[INFO ][2010-05-02 20:12:28] Default batch fetch size: 1
[INFO ][2010-05-02 20:12:28] Generate SQL with comments: disabled
[INFO ][2010-05-02 20:12:28] Order SQL updates by primary key: disabled
[INFO ][2010-05-02 20:12:28] Order SQL inserts for batching: disabled
[INFO ][2010-05-02 20:12:28] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:12:28] Using ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:12:28] Query language substitutions: {}
[INFO ][2010-05-02 20:12:28] JPA-QL strict compliance: disabled
[INFO ][2010-05-02 20:12:28] Second-level cache: enabled
[INFO ][2010-05-02 20:12:28] Query cache: disabled
[INFO ][2010-05-02 20:12:28] Cache provider: org.hibernate.cache.NoCacheProvider
[INFO ][2010-05-02 20:12:28] Optimize cache for minimal puts: disabled
[INFO ][2010-05-02 20:12:28] Structured second-level cache entries: disabled
[INFO ][2010-05-02 20:12:28] Statistics: disabled
[INFO ][2010-05-02 20:12:28] Deleted entity synthetic identifier rollback: disabled
[INFO ][2010-05-02 20:12:28] Default entity-mode: pojo
[INFO ][2010-05-02 20:12:28] Named query checking : enabled
[INFO ][2010-05-02 20:12:28] building session factory
[INFO ][2010-05-02 20:12:28] Not binding factory to JNDI, no JNDI name configured
[WARN ][2010-05-02 20:13:19] SQL Error: 1205, SQLState: 41000
[ERROR][2010-05-02 20:13:19] Lock wait timeout exceeded; try restarting transaction
[ERROR][2010-05-02 20:13:19] Could not synchronize database state with session
org.hibernate.exception.GenericJDBCException: Could not execute JDBC batch update
	at org.hibernate.exception.SQLStateConverter.handledNonSpecificException(SQLStateConverter.java:103)
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:91)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:43)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:254)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:266)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:167)
	at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:298)
	at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:27)
	at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1001)
	at org.springframework.orm.hibernate3.HibernateAccessor.flushIfNecessary(HibernateAccessor.java:390)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:420)
	at org.springframework.orm.hibernate3.HibernateTemplate.executeWithNativeSession(HibernateTemplate.java:374)
	at org.springframework.orm.hibernate3.HibernateTemplate.save(HibernateTemplate.java:694)
	at com.goodfriend.dao.impl.UserDAO.save(UserDAO.java:46)
	at com.goodfriend.dao.test.UserDAOTest.testDelete(UserDAOTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:73)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:46)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41)
	at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:220)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:46)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: java.sql.BatchUpdateException: Lock wait timeout exceeded; try restarting transaction
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:1269)
	at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:955)
	at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:48)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:247)
	... 35 more
[ERROR][2010-05-02 20:13:19] save failed
org.springframework.jdbc.UncategorizedSQLException: Hibernate operation: Could not execute JDBC batch update; uncategorized SQLException for SQL [insert into goodfriend.user (items, user_name, password, real_name, gender, birthday, phone, email, hoby, photo, id_user) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]; SQL state [41000]; error code [1205]; Lock wait timeout exceeded; try restarting transaction; nested exception is java.sql.BatchUpdateException: Lock wait timeout exceeded; try restarting transaction
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:83)
	at org.springframework.orm.hibernate3.HibernateAccessor.convertJdbcAccessException(HibernateAccessor.java:424)
	at org.springframework.orm.hibernate3.HibernateAccessor.convertHibernateAccessException(HibernateAccessor.java:410)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:424)
	at org.springframework.orm.hibernate3.HibernateTemplate.executeWithNativeSession(HibernateTemplate.java:374)
	at org.springframework.orm.hibernate3.HibernateTemplate.save(HibernateTemplate.java:694)
	at com.goodfriend.dao.impl.UserDAO.save(UserDAO.java:46)
	at com.goodfriend.dao.test.UserDAOTest.testDelete(UserDAOTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:73)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:46)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41)
	at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:220)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:46)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: java.sql.BatchUpdateException: Lock wait timeout exceeded; try restarting transaction
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:1269)
	at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:955)
	at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:48)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:247)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:266)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:167)
	at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:298)
	at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:27)
	at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1001)
	at org.springframework.orm.hibernate3.HibernateAccessor.flushIfNecessary(HibernateAccessor.java:390)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:420)
	... 28 more
[INFO ][2010-05-02 20:13:19] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@18782a7: display name [org.springframework.context.support.ClassPathXmlApplicationContext@18782a7]; startup date [Sun May 02 20:13:19 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 20:13:19] Loading XML bean definitions from class path resource [applicationContextForTest.xml]
[INFO ][2010-05-02 20:13:19] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@18782a7]: org.springframework.beans.factory.support.DefaultListableBeanFactory@29d294
[INFO ][2010-05-02 20:13:19] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@29d294: defining beans [sessionFactory,PlacardDAO,StatementDAO,GossipDAO,ItemDAO,AlbumDAO,BlogDAO,UserDAO,PictureDAO,ReplyDAO,FriendsDAO,AdminDAO,loginAction]; root of factory hierarchy
[INFO ][2010-05-02 20:13:19] configuring from url: file:/K:/SSD10/Project/GoodFriend/WebRoot/WEB-INF/classes/hibernate.cfg.xml
[INFO ][2010-05-02 20:13:19] Reading mappings from resource : com/goodfriend/model/Placard.hbm.xml
[INFO ][2010-05-02 20:13:19] Mapping class: com.goodfriend.model.Placard -> placard
[INFO ][2010-05-02 20:13:19] Reading mappings from resource : com/goodfriend/model/Statement.hbm.xml
[INFO ][2010-05-02 20:13:19] Mapping class: com.goodfriend.model.Statement -> statement
[INFO ][2010-05-02 20:13:19] Reading mappings from resource : com/goodfriend/model/Gossip.hbm.xml
[INFO ][2010-05-02 20:13:19] Mapping class: com.goodfriend.model.Gossip -> gossip
[INFO ][2010-05-02 20:13:19] Reading mappings from resource : com/goodfriend/model/Item.hbm.xml
[INFO ][2010-05-02 20:13:19] Mapping class: com.goodfriend.model.Item -> item
[INFO ][2010-05-02 20:13:19] Reading mappings from resource : com/goodfriend/model/Album.hbm.xml
[INFO ][2010-05-02 20:13:19] Mapping class: com.goodfriend.model.Album -> album
[INFO ][2010-05-02 20:13:19] Reading mappings from resource : com/goodfriend/model/Blog.hbm.xml
[INFO ][2010-05-02 20:13:19] Mapping class: com.goodfriend.model.Blog -> blog
[INFO ][2010-05-02 20:13:19] Reading mappings from resource : com/goodfriend/model/User.hbm.xml
[INFO ][2010-05-02 20:13:19] Mapping class: com.goodfriend.model.User -> user
[INFO ][2010-05-02 20:13:19] Reading mappings from resource : com/goodfriend/model/Picture.hbm.xml
[INFO ][2010-05-02 20:13:20] Mapping class: com.goodfriend.model.Picture -> picture
[INFO ][2010-05-02 20:13:20] Reading mappings from resource : com/goodfriend/model/Reply.hbm.xml
[INFO ][2010-05-02 20:13:20] Mapping class: com.goodfriend.model.Reply -> reply
[INFO ][2010-05-02 20:13:20] Reading mappings from resource : com/goodfriend/model/Friends.hbm.xml
[INFO ][2010-05-02 20:13:20] Mapping class: com.goodfriend.model.Friends -> friends
[INFO ][2010-05-02 20:13:20] Reading mappings from resource : com/goodfriend/model/Admin.hbm.xml
[INFO ][2010-05-02 20:13:20] Mapping class: com.goodfriend.model.Admin -> admin
[INFO ][2010-05-02 20:13:20] Configured SessionFactory: null
[INFO ][2010-05-02 20:13:20] Mapping collection: com.goodfriend.model.Item.gossips -> gossip
[INFO ][2010-05-02 20:13:20] Mapping collection: com.goodfriend.model.Item.pictures -> picture
[INFO ][2010-05-02 20:13:20] Mapping collection: com.goodfriend.model.Item.statements -> statement
[INFO ][2010-05-02 20:13:20] Mapping collection: com.goodfriend.model.Item.users -> user
[INFO ][2010-05-02 20:13:20] Mapping collection: com.goodfriend.model.Item.blogs -> blog
[INFO ][2010-05-02 20:13:20] Mapping collection: com.goodfriend.model.Item.replies -> reply
[INFO ][2010-05-02 20:13:20] Mapping collection: com.goodfriend.model.Item.albums -> album
[INFO ][2010-05-02 20:13:20] Mapping collection: com.goodfriend.model.Album.pictures -> picture
[INFO ][2010-05-02 20:13:20] Mapping collection: com.goodfriend.model.User.friendsesForFriendId -> friends
[INFO ][2010-05-02 20:13:20] Mapping collection: com.goodfriend.model.User.replies -> reply
[INFO ][2010-05-02 20:13:20] Mapping collection: com.goodfriend.model.User.friendsesForUserId -> friends
[INFO ][2010-05-02 20:13:20] Mapping collection: com.goodfriend.model.User.gossips -> gossip
[INFO ][2010-05-02 20:13:20] Building new Hibernate SessionFactory
[INFO ][2010-05-02 20:13:20] Using Hibernate built-in connection pool (not for production use!)
[INFO ][2010-05-02 20:13:20] Hibernate connection pool size: 20
[INFO ][2010-05-02 20:13:20] autocommit mode: false
[INFO ][2010-05-02 20:13:20] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/goodfriend
[INFO ][2010-05-02 20:13:20] connection properties: {user=root, password=****}
[INFO ][2010-05-02 20:13:20] RDBMS: MySQL, version: 5.0.67-community-nt
[INFO ][2010-05-02 20:13:20] JDBC driver: MySQL-AB JDBC Driver, version: mysql-connector-java-5.0.8 ( Revision: ${svn.Revision} )
[INFO ][2010-05-02 20:13:20] Using dialect: org.hibernate.dialect.MySQLDialect
[INFO ][2010-05-02 20:13:20] Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[INFO ][2010-05-02 20:13:20] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[INFO ][2010-05-02 20:13:20] Automatic flush during beforeCompletion(): disabled
[INFO ][2010-05-02 20:13:20] Automatic session close at end of transaction: disabled
[INFO ][2010-05-02 20:13:20] JDBC batch size: 15
[INFO ][2010-05-02 20:13:20] JDBC batch updates for versioned data: disabled
[INFO ][2010-05-02 20:13:20] Scrollable result sets: enabled
[INFO ][2010-05-02 20:13:20] JDBC3 getGeneratedKeys(): enabled
[INFO ][2010-05-02 20:13:20] Connection release mode: auto
[INFO ][2010-05-02 20:13:20] Maximum outer join fetch depth: 2
[INFO ][2010-05-02 20:13:20] Default batch fetch size: 1
[INFO ][2010-05-02 20:13:20] Generate SQL with comments: disabled
[INFO ][2010-05-02 20:13:20] Order SQL updates by primary key: disabled
[INFO ][2010-05-02 20:13:20] Order SQL inserts for batching: disabled
[INFO ][2010-05-02 20:13:20] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:13:20] Using ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:13:20] Query language substitutions: {}
[INFO ][2010-05-02 20:13:20] JPA-QL strict compliance: disabled
[INFO ][2010-05-02 20:13:20] Second-level cache: enabled
[INFO ][2010-05-02 20:13:20] Query cache: disabled
[INFO ][2010-05-02 20:13:20] Cache provider: org.hibernate.cache.NoCacheProvider
[INFO ][2010-05-02 20:13:20] Optimize cache for minimal puts: disabled
[INFO ][2010-05-02 20:13:20] Structured second-level cache entries: disabled
[INFO ][2010-05-02 20:13:20] Statistics: disabled
[INFO ][2010-05-02 20:13:20] Deleted entity synthetic identifier rollback: disabled
[INFO ][2010-05-02 20:13:20] Default entity-mode: pojo
[INFO ][2010-05-02 20:13:20] Named query checking : enabled
[INFO ][2010-05-02 20:13:20] building session factory
[INFO ][2010-05-02 20:13:20] Not binding factory to JNDI, no JNDI name configured
[WARN ][2010-05-02 20:14:11] SQL Error: 1205, SQLState: 41000
[ERROR][2010-05-02 20:14:11] Lock wait timeout exceeded; try restarting transaction
[ERROR][2010-05-02 20:14:11] Could not synchronize database state with session
org.hibernate.exception.GenericJDBCException: Could not execute JDBC batch update
	at org.hibernate.exception.SQLStateConverter.handledNonSpecificException(SQLStateConverter.java:103)
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:91)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:43)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:254)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:266)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:167)
	at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:298)
	at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:27)
	at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1001)
	at org.springframework.orm.hibernate3.HibernateAccessor.flushIfNecessary(HibernateAccessor.java:390)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:420)
	at org.springframework.orm.hibernate3.HibernateTemplate.executeWithNativeSession(HibernateTemplate.java:374)
	at org.springframework.orm.hibernate3.HibernateTemplate.save(HibernateTemplate.java:694)
	at com.goodfriend.dao.impl.UserDAO.save(UserDAO.java:46)
	at com.goodfriend.dao.test.UserDAOTest.testFindById(UserDAOTest.java:64)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:73)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:46)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41)
	at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:220)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:46)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: java.sql.BatchUpdateException: Lock wait timeout exceeded; try restarting transaction
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:1269)
	at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:955)
	at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:48)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:247)
	... 35 more
[ERROR][2010-05-02 20:14:11] save failed
org.springframework.jdbc.UncategorizedSQLException: Hibernate operation: Could not execute JDBC batch update; uncategorized SQLException for SQL [insert into goodfriend.user (items, user_name, password, real_name, gender, birthday, phone, email, hoby, photo, id_user) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]; SQL state [41000]; error code [1205]; Lock wait timeout exceeded; try restarting transaction; nested exception is java.sql.BatchUpdateException: Lock wait timeout exceeded; try restarting transaction
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:83)
	at org.springframework.orm.hibernate3.HibernateAccessor.convertJdbcAccessException(HibernateAccessor.java:424)
	at org.springframework.orm.hibernate3.HibernateAccessor.convertHibernateAccessException(HibernateAccessor.java:410)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:424)
	at org.springframework.orm.hibernate3.HibernateTemplate.executeWithNativeSession(HibernateTemplate.java:374)
	at org.springframework.orm.hibernate3.HibernateTemplate.save(HibernateTemplate.java:694)
	at com.goodfriend.dao.impl.UserDAO.save(UserDAO.java:46)
	at com.goodfriend.dao.test.UserDAOTest.testFindById(UserDAOTest.java:64)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:73)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:46)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41)
	at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:220)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:46)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: java.sql.BatchUpdateException: Lock wait timeout exceeded; try restarting transaction
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:1269)
	at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:955)
	at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:48)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:247)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:266)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:167)
	at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:298)
	at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:27)
	at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1001)
	at org.springframework.orm.hibernate3.HibernateAccessor.flushIfNecessary(HibernateAccessor.java:390)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:420)
	... 28 more
[INFO ][2010-05-02 20:14:11] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1de0c09: display name [org.springframework.context.support.ClassPathXmlApplicationContext@1de0c09]; startup date [Sun May 02 20:14:11 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 20:14:11] Loading XML bean definitions from class path resource [applicationContextForTest.xml]
[INFO ][2010-05-02 20:14:11] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@1de0c09]: org.springframework.beans.factory.support.DefaultListableBeanFactory@1b59919
[INFO ][2010-05-02 20:14:11] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1b59919: defining beans [sessionFactory,PlacardDAO,StatementDAO,GossipDAO,ItemDAO,AlbumDAO,BlogDAO,UserDAO,PictureDAO,ReplyDAO,FriendsDAO,AdminDAO,loginAction]; root of factory hierarchy
[INFO ][2010-05-02 20:14:11] configuring from url: file:/K:/SSD10/Project/GoodFriend/WebRoot/WEB-INF/classes/hibernate.cfg.xml
[INFO ][2010-05-02 20:14:11] Reading mappings from resource : com/goodfriend/model/Placard.hbm.xml
[INFO ][2010-05-02 20:14:11] Mapping class: com.goodfriend.model.Placard -> placard
[INFO ][2010-05-02 20:14:11] Reading mappings from resource : com/goodfriend/model/Statement.hbm.xml
[INFO ][2010-05-02 20:14:11] Mapping class: com.goodfriend.model.Statement -> statement
[INFO ][2010-05-02 20:14:11] Reading mappings from resource : com/goodfriend/model/Gossip.hbm.xml
[INFO ][2010-05-02 20:14:11] Mapping class: com.goodfriend.model.Gossip -> gossip
[INFO ][2010-05-02 20:14:11] Reading mappings from resource : com/goodfriend/model/Item.hbm.xml
[INFO ][2010-05-02 20:14:11] Mapping class: com.goodfriend.model.Item -> item
[INFO ][2010-05-02 20:14:11] Reading mappings from resource : com/goodfriend/model/Album.hbm.xml
[INFO ][2010-05-02 20:14:11] Mapping class: com.goodfriend.model.Album -> album
[INFO ][2010-05-02 20:14:11] Reading mappings from resource : com/goodfriend/model/Blog.hbm.xml
[INFO ][2010-05-02 20:14:11] Mapping class: com.goodfriend.model.Blog -> blog
[INFO ][2010-05-02 20:14:11] Reading mappings from resource : com/goodfriend/model/User.hbm.xml
[INFO ][2010-05-02 20:14:11] Mapping class: com.goodfriend.model.User -> user
[INFO ][2010-05-02 20:14:11] Reading mappings from resource : com/goodfriend/model/Picture.hbm.xml
[INFO ][2010-05-02 20:14:11] Mapping class: com.goodfriend.model.Picture -> picture
[INFO ][2010-05-02 20:14:11] Reading mappings from resource : com/goodfriend/model/Reply.hbm.xml
[INFO ][2010-05-02 20:14:12] Mapping class: com.goodfriend.model.Reply -> reply
[INFO ][2010-05-02 20:14:12] Reading mappings from resource : com/goodfriend/model/Friends.hbm.xml
[INFO ][2010-05-02 20:14:12] Mapping class: com.goodfriend.model.Friends -> friends
[INFO ][2010-05-02 20:14:12] Reading mappings from resource : com/goodfriend/model/Admin.hbm.xml
[INFO ][2010-05-02 20:14:12] Mapping class: com.goodfriend.model.Admin -> admin
[INFO ][2010-05-02 20:14:12] Configured SessionFactory: null
[INFO ][2010-05-02 20:14:12] Mapping collection: com.goodfriend.model.Item.gossips -> gossip
[INFO ][2010-05-02 20:14:12] Mapping collection: com.goodfriend.model.Item.pictures -> picture
[INFO ][2010-05-02 20:14:12] Mapping collection: com.goodfriend.model.Item.statements -> statement
[INFO ][2010-05-02 20:14:12] Mapping collection: com.goodfriend.model.Item.users -> user
[INFO ][2010-05-02 20:14:12] Mapping collection: com.goodfriend.model.Item.blogs -> blog
[INFO ][2010-05-02 20:14:12] Mapping collection: com.goodfriend.model.Item.replies -> reply
[INFO ][2010-05-02 20:14:12] Mapping collection: com.goodfriend.model.Item.albums -> album
[INFO ][2010-05-02 20:14:12] Mapping collection: com.goodfriend.model.Album.pictures -> picture
[INFO ][2010-05-02 20:14:12] Mapping collection: com.goodfriend.model.User.friendsesForFriendId -> friends
[INFO ][2010-05-02 20:14:12] Mapping collection: com.goodfriend.model.User.replies -> reply
[INFO ][2010-05-02 20:14:12] Mapping collection: com.goodfriend.model.User.friendsesForUserId -> friends
[INFO ][2010-05-02 20:14:12] Mapping collection: com.goodfriend.model.User.gossips -> gossip
[INFO ][2010-05-02 20:14:12] Building new Hibernate SessionFactory
[INFO ][2010-05-02 20:14:12] Using Hibernate built-in connection pool (not for production use!)
[INFO ][2010-05-02 20:14:12] Hibernate connection pool size: 20
[INFO ][2010-05-02 20:14:12] autocommit mode: false
[INFO ][2010-05-02 20:14:12] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/goodfriend
[INFO ][2010-05-02 20:14:12] connection properties: {user=root, password=****}
[INFO ][2010-05-02 20:14:12] RDBMS: MySQL, version: 5.0.67-community-nt
[INFO ][2010-05-02 20:14:12] JDBC driver: MySQL-AB JDBC Driver, version: mysql-connector-java-5.0.8 ( Revision: ${svn.Revision} )
[INFO ][2010-05-02 20:14:12] Using dialect: org.hibernate.dialect.MySQLDialect
[INFO ][2010-05-02 20:14:12] Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[INFO ][2010-05-02 20:14:12] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[INFO ][2010-05-02 20:14:12] Automatic flush during beforeCompletion(): disabled
[INFO ][2010-05-02 20:14:12] Automatic session close at end of transaction: disabled
[INFO ][2010-05-02 20:14:12] JDBC batch size: 15
[INFO ][2010-05-02 20:14:12] JDBC batch updates for versioned data: disabled
[INFO ][2010-05-02 20:14:12] Scrollable result sets: enabled
[INFO ][2010-05-02 20:14:12] JDBC3 getGeneratedKeys(): enabled
[INFO ][2010-05-02 20:14:12] Connection release mode: auto
[INFO ][2010-05-02 20:14:12] Maximum outer join fetch depth: 2
[INFO ][2010-05-02 20:14:12] Default batch fetch size: 1
[INFO ][2010-05-02 20:14:12] Generate SQL with comments: disabled
[INFO ][2010-05-02 20:14:12] Order SQL updates by primary key: disabled
[INFO ][2010-05-02 20:14:12] Order SQL inserts for batching: disabled
[INFO ][2010-05-02 20:14:12] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:14:12] Using ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:14:12] Query language substitutions: {}
[INFO ][2010-05-02 20:14:12] JPA-QL strict compliance: disabled
[INFO ][2010-05-02 20:14:12] Second-level cache: enabled
[INFO ][2010-05-02 20:14:12] Query cache: disabled
[INFO ][2010-05-02 20:14:12] Cache provider: org.hibernate.cache.NoCacheProvider
[INFO ][2010-05-02 20:14:12] Optimize cache for minimal puts: disabled
[INFO ][2010-05-02 20:14:12] Structured second-level cache entries: disabled
[INFO ][2010-05-02 20:14:12] Statistics: disabled
[INFO ][2010-05-02 20:14:12] Deleted entity synthetic identifier rollback: disabled
[INFO ][2010-05-02 20:14:12] Default entity-mode: pojo
[INFO ][2010-05-02 20:14:12] Named query checking : enabled
[INFO ][2010-05-02 20:14:12] building session factory
[INFO ][2010-05-02 20:14:12] Not binding factory to JNDI, no JNDI name configured
[WARN ][2010-05-02 20:14:12] SQL Error: 0, SQLState: 22001
[ERROR][2010-05-02 20:14:12] Data truncation: Data too long for column 'user_name' at row 1
[ERROR][2010-05-02 20:14:12] Could not synchronize database state with session
org.hibernate.exception.DataException: Could not execute JDBC batch update
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:77)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:43)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:254)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:266)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:167)
	at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:298)
	at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:27)
	at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1001)
	at org.springframework.orm.hibernate3.HibernateAccessor.flushIfNecessary(HibernateAccessor.java:390)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:420)
	at org.springframework.orm.hibernate3.HibernateTemplate.executeWithNativeSession(HibernateTemplate.java:374)
	at org.springframework.orm.hibernate3.HibernateTemplate.save(HibernateTemplate.java:694)
	at com.goodfriend.dao.impl.UserDAO.save(UserDAO.java:46)
	at com.goodfriend.dao.test.UserDAOTest.testFindByUserName(UserDAOTest.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:73)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:46)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41)
	at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:220)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:46)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: java.sql.BatchUpdateException: Data truncation: Data too long for column 'user_name' at row 1
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:1269)
	at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:955)
	at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:48)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:247)
	... 35 more
[ERROR][2010-05-02 20:14:12] save failed
org.springframework.dao.DataIntegrityViolationException: Could not execute JDBC batch update; nested exception is org.hibernate.exception.DataException: Could not execute JDBC batch update
	at org.springframework.orm.hibernate3.SessionFactoryUtils.convertHibernateAccessException(SessionFactoryUtils.java:639)
	at org.springframework.orm.hibernate3.HibernateAccessor.convertHibernateAccessException(HibernateAccessor.java:412)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:424)
	at org.springframework.orm.hibernate3.HibernateTemplate.executeWithNativeSession(HibernateTemplate.java:374)
	at org.springframework.orm.hibernate3.HibernateTemplate.save(HibernateTemplate.java:694)
	at com.goodfriend.dao.impl.UserDAO.save(UserDAO.java:46)
	at com.goodfriend.dao.test.UserDAOTest.testFindByUserName(UserDAOTest.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:73)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:46)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41)
	at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:220)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:46)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.hibernate.exception.DataException: Could not execute JDBC batch update
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:77)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:43)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:254)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:266)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:167)
	at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:298)
	at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:27)
	at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1001)
	at org.springframework.orm.hibernate3.HibernateAccessor.flushIfNecessary(HibernateAccessor.java:390)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:420)
	... 28 more
Caused by: java.sql.BatchUpdateException: Data truncation: Data too long for column 'user_name' at row 1
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:1269)
	at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:955)
	at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:48)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:247)
	... 35 more
[INFO ][2010-05-02 20:14:12] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@d844a9: display name [org.springframework.context.support.ClassPathXmlApplicationContext@d844a9]; startup date [Sun May 02 20:14:12 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 20:14:12] Loading XML bean definitions from class path resource [applicationContextForTest.xml]
[INFO ][2010-05-02 20:14:12] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@d844a9]: org.springframework.beans.factory.support.DefaultListableBeanFactory@e5ace9
[INFO ][2010-05-02 20:14:12] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@e5ace9: defining beans [sessionFactory,PlacardDAO,StatementDAO,GossipDAO,ItemDAO,AlbumDAO,BlogDAO,UserDAO,PictureDAO,ReplyDAO,FriendsDAO,AdminDAO,loginAction]; root of factory hierarchy
[INFO ][2010-05-02 20:14:12] configuring from url: file:/K:/SSD10/Project/GoodFriend/WebRoot/WEB-INF/classes/hibernate.cfg.xml
[INFO ][2010-05-02 20:14:12] Reading mappings from resource : com/goodfriend/model/Placard.hbm.xml
[INFO ][2010-05-02 20:14:12] Mapping class: com.goodfriend.model.Placard -> placard
[INFO ][2010-05-02 20:14:12] Reading mappings from resource : com/goodfriend/model/Statement.hbm.xml
[INFO ][2010-05-02 20:14:12] Mapping class: com.goodfriend.model.Statement -> statement
[INFO ][2010-05-02 20:14:12] Reading mappings from resource : com/goodfriend/model/Gossip.hbm.xml
[INFO ][2010-05-02 20:14:12] Mapping class: com.goodfriend.model.Gossip -> gossip
[INFO ][2010-05-02 20:14:12] Reading mappings from resource : com/goodfriend/model/Item.hbm.xml
[INFO ][2010-05-02 20:14:12] Mapping class: com.goodfriend.model.Item -> item
[INFO ][2010-05-02 20:14:12] Reading mappings from resource : com/goodfriend/model/Album.hbm.xml
[INFO ][2010-05-02 20:14:12] Mapping class: com.goodfriend.model.Album -> album
[INFO ][2010-05-02 20:14:12] Reading mappings from resource : com/goodfriend/model/Blog.hbm.xml
[INFO ][2010-05-02 20:14:12] Mapping class: com.goodfriend.model.Blog -> blog
[INFO ][2010-05-02 20:14:12] Reading mappings from resource : com/goodfriend/model/User.hbm.xml
[INFO ][2010-05-02 20:14:12] Mapping class: com.goodfriend.model.User -> user
[INFO ][2010-05-02 20:14:12] Reading mappings from resource : com/goodfriend/model/Picture.hbm.xml
[INFO ][2010-05-02 20:14:12] Mapping class: com.goodfriend.model.Picture -> picture
[INFO ][2010-05-02 20:14:12] Reading mappings from resource : com/goodfriend/model/Reply.hbm.xml
[INFO ][2010-05-02 20:14:12] Mapping class: com.goodfriend.model.Reply -> reply
[INFO ][2010-05-02 20:14:12] Reading mappings from resource : com/goodfriend/model/Friends.hbm.xml
[INFO ][2010-05-02 20:14:12] Mapping class: com.goodfriend.model.Friends -> friends
[INFO ][2010-05-02 20:14:12] Reading mappings from resource : com/goodfriend/model/Admin.hbm.xml
[INFO ][2010-05-02 20:14:12] Mapping class: com.goodfriend.model.Admin -> admin
[INFO ][2010-05-02 20:14:12] Configured SessionFactory: null
[INFO ][2010-05-02 20:14:12] Mapping collection: com.goodfriend.model.Item.gossips -> gossip
[INFO ][2010-05-02 20:14:12] Mapping collection: com.goodfriend.model.Item.pictures -> picture
[INFO ][2010-05-02 20:14:12] Mapping collection: com.goodfriend.model.Item.statements -> statement
[INFO ][2010-05-02 20:14:12] Mapping collection: com.goodfriend.model.Item.users -> user
[INFO ][2010-05-02 20:14:12] Mapping collection: com.goodfriend.model.Item.blogs -> blog
[INFO ][2010-05-02 20:14:12] Mapping collection: com.goodfriend.model.Item.replies -> reply
[INFO ][2010-05-02 20:14:12] Mapping collection: com.goodfriend.model.Item.albums -> album
[INFO ][2010-05-02 20:14:12] Mapping collection: com.goodfriend.model.Album.pictures -> picture
[INFO ][2010-05-02 20:14:12] Mapping collection: com.goodfriend.model.User.friendsesForFriendId -> friends
[INFO ][2010-05-02 20:14:12] Mapping collection: com.goodfriend.model.User.replies -> reply
[INFO ][2010-05-02 20:14:12] Mapping collection: com.goodfriend.model.User.friendsesForUserId -> friends
[INFO ][2010-05-02 20:14:12] Mapping collection: com.goodfriend.model.User.gossips -> gossip
[INFO ][2010-05-02 20:14:12] Building new Hibernate SessionFactory
[INFO ][2010-05-02 20:14:12] Using Hibernate built-in connection pool (not for production use!)
[INFO ][2010-05-02 20:14:12] Hibernate connection pool size: 20
[INFO ][2010-05-02 20:14:12] autocommit mode: false
[INFO ][2010-05-02 20:14:12] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/goodfriend
[INFO ][2010-05-02 20:14:12] connection properties: {user=root, password=****}
[INFO ][2010-05-02 20:14:12] RDBMS: MySQL, version: 5.0.67-community-nt
[INFO ][2010-05-02 20:14:12] JDBC driver: MySQL-AB JDBC Driver, version: mysql-connector-java-5.0.8 ( Revision: ${svn.Revision} )
[INFO ][2010-05-02 20:14:12] Using dialect: org.hibernate.dialect.MySQLDialect
[INFO ][2010-05-02 20:14:12] Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[INFO ][2010-05-02 20:14:12] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[INFO ][2010-05-02 20:14:12] Automatic flush during beforeCompletion(): disabled
[INFO ][2010-05-02 20:14:12] Automatic session close at end of transaction: disabled
[INFO ][2010-05-02 20:14:12] JDBC batch size: 15
[INFO ][2010-05-02 20:14:12] JDBC batch updates for versioned data: disabled
[INFO ][2010-05-02 20:14:12] Scrollable result sets: enabled
[INFO ][2010-05-02 20:14:12] JDBC3 getGeneratedKeys(): enabled
[INFO ][2010-05-02 20:14:12] Connection release mode: auto
[INFO ][2010-05-02 20:14:12] Maximum outer join fetch depth: 2
[INFO ][2010-05-02 20:14:12] Default batch fetch size: 1
[INFO ][2010-05-02 20:14:12] Generate SQL with comments: disabled
[INFO ][2010-05-02 20:14:12] Order SQL updates by primary key: disabled
[INFO ][2010-05-02 20:14:12] Order SQL inserts for batching: disabled
[INFO ][2010-05-02 20:14:12] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:14:12] Using ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:14:12] Query language substitutions: {}
[INFO ][2010-05-02 20:14:12] JPA-QL strict compliance: disabled
[INFO ][2010-05-02 20:14:12] Second-level cache: enabled
[INFO ][2010-05-02 20:14:12] Query cache: disabled
[INFO ][2010-05-02 20:14:12] Cache provider: org.hibernate.cache.NoCacheProvider
[INFO ][2010-05-02 20:14:12] Optimize cache for minimal puts: disabled
[INFO ][2010-05-02 20:14:12] Structured second-level cache entries: disabled
[INFO ][2010-05-02 20:14:12] Statistics: disabled
[INFO ][2010-05-02 20:14:12] Deleted entity synthetic identifier rollback: disabled
[INFO ][2010-05-02 20:14:12] Default entity-mode: pojo
[INFO ][2010-05-02 20:14:12] Named query checking : enabled
[INFO ][2010-05-02 20:14:12] building session factory
[INFO ][2010-05-02 20:14:12] Not binding factory to JNDI, no JNDI name configured
[INFO ][2010-05-02 20:14:57] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@958bb8: display name [org.springframework.context.support.ClassPathXmlApplicationContext@958bb8]; startup date [Sun May 02 20:14:57 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 20:14:58] Loading XML bean definitions from class path resource [applicationContextForTest.xml]
[INFO ][2010-05-02 20:14:58] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@958bb8]: org.springframework.beans.factory.support.DefaultListableBeanFactory@17a4989
[INFO ][2010-05-02 20:14:58] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@17a4989: defining beans [sessionFactory,PlacardDAO,StatementDAO,GossipDAO,ItemDAO,AlbumDAO,BlogDAO,UserDAO,PictureDAO,ReplyDAO,FriendsDAO,AdminDAO,loginAction]; root of factory hierarchy
[INFO ][2010-05-02 20:14:58] Hibernate 3.2.7
[INFO ][2010-05-02 20:14:58] hibernate.properties not found
[INFO ][2010-05-02 20:14:58] Bytecode provider name : cglib
[INFO ][2010-05-02 20:14:58] using JDK 1.4 java.sql.Timestamp handling
[INFO ][2010-05-02 20:14:58] configuring from url: file:/K:/SSD10/Project/GoodFriend/WebRoot/WEB-INF/classes/hibernate.cfg.xml
[INFO ][2010-05-02 20:14:58] Reading mappings from resource : com/goodfriend/model/Placard.hbm.xml
[INFO ][2010-05-02 20:14:59] Mapping class: com.goodfriend.model.Placard -> placard
[INFO ][2010-05-02 20:14:59] Reading mappings from resource : com/goodfriend/model/Statement.hbm.xml
[INFO ][2010-05-02 20:14:59] Mapping class: com.goodfriend.model.Statement -> statement
[INFO ][2010-05-02 20:14:59] Reading mappings from resource : com/goodfriend/model/Gossip.hbm.xml
[INFO ][2010-05-02 20:14:59] Mapping class: com.goodfriend.model.Gossip -> gossip
[INFO ][2010-05-02 20:14:59] Reading mappings from resource : com/goodfriend/model/Item.hbm.xml
[INFO ][2010-05-02 20:14:59] Mapping class: com.goodfriend.model.Item -> item
[INFO ][2010-05-02 20:14:59] Reading mappings from resource : com/goodfriend/model/Album.hbm.xml
[INFO ][2010-05-02 20:14:59] Mapping class: com.goodfriend.model.Album -> album
[INFO ][2010-05-02 20:14:59] Reading mappings from resource : com/goodfriend/model/Blog.hbm.xml
[INFO ][2010-05-02 20:14:59] Mapping class: com.goodfriend.model.Blog -> blog
[INFO ][2010-05-02 20:14:59] Reading mappings from resource : com/goodfriend/model/User.hbm.xml
[INFO ][2010-05-02 20:14:59] Mapping class: com.goodfriend.model.User -> user
[INFO ][2010-05-02 20:14:59] Reading mappings from resource : com/goodfriend/model/Picture.hbm.xml
[INFO ][2010-05-02 20:14:59] Mapping class: com.goodfriend.model.Picture -> picture
[INFO ][2010-05-02 20:14:59] Reading mappings from resource : com/goodfriend/model/Reply.hbm.xml
[INFO ][2010-05-02 20:14:59] Mapping class: com.goodfriend.model.Reply -> reply
[INFO ][2010-05-02 20:14:59] Reading mappings from resource : com/goodfriend/model/Friends.hbm.xml
[INFO ][2010-05-02 20:14:59] Mapping class: com.goodfriend.model.Friends -> friends
[INFO ][2010-05-02 20:14:59] Reading mappings from resource : com/goodfriend/model/Admin.hbm.xml
[INFO ][2010-05-02 20:14:59] Mapping class: com.goodfriend.model.Admin -> admin
[INFO ][2010-05-02 20:14:59] Configured SessionFactory: null
[INFO ][2010-05-02 20:14:59] Mapping collection: com.goodfriend.model.Item.gossips -> gossip
[INFO ][2010-05-02 20:14:59] Mapping collection: com.goodfriend.model.Item.pictures -> picture
[INFO ][2010-05-02 20:14:59] Mapping collection: com.goodfriend.model.Item.statements -> statement
[INFO ][2010-05-02 20:14:59] Mapping collection: com.goodfriend.model.Item.users -> user
[INFO ][2010-05-02 20:14:59] Mapping collection: com.goodfriend.model.Item.blogs -> blog
[INFO ][2010-05-02 20:14:59] Mapping collection: com.goodfriend.model.Item.replies -> reply
[INFO ][2010-05-02 20:14:59] Mapping collection: com.goodfriend.model.Item.albums -> album
[INFO ][2010-05-02 20:14:59] Mapping collection: com.goodfriend.model.Album.pictures -> picture
[INFO ][2010-05-02 20:14:59] Mapping collection: com.goodfriend.model.User.friendsesForFriendId -> friends
[INFO ][2010-05-02 20:14:59] Mapping collection: com.goodfriend.model.User.replies -> reply
[INFO ][2010-05-02 20:14:59] Mapping collection: com.goodfriend.model.User.friendsesForUserId -> friends
[INFO ][2010-05-02 20:14:59] Mapping collection: com.goodfriend.model.User.gossips -> gossip
[INFO ][2010-05-02 20:14:59] Building new Hibernate SessionFactory
[INFO ][2010-05-02 20:14:59] Using Hibernate built-in connection pool (not for production use!)
[INFO ][2010-05-02 20:14:59] Hibernate connection pool size: 20
[INFO ][2010-05-02 20:14:59] autocommit mode: false
[INFO ][2010-05-02 20:14:59] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/goodfriend
[INFO ][2010-05-02 20:14:59] connection properties: {user=root, password=****}
[INFO ][2010-05-02 20:14:59] RDBMS: MySQL, version: 5.0.67-community-nt
[INFO ][2010-05-02 20:14:59] JDBC driver: MySQL-AB JDBC Driver, version: mysql-connector-java-5.0.8 ( Revision: ${svn.Revision} )
[INFO ][2010-05-02 20:14:59] Using dialect: org.hibernate.dialect.MySQLDialect
[INFO ][2010-05-02 20:14:59] Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[INFO ][2010-05-02 20:14:59] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[INFO ][2010-05-02 20:14:59] Automatic flush during beforeCompletion(): disabled
[INFO ][2010-05-02 20:14:59] Automatic session close at end of transaction: disabled
[INFO ][2010-05-02 20:14:59] JDBC batch size: 15
[INFO ][2010-05-02 20:14:59] JDBC batch updates for versioned data: disabled
[INFO ][2010-05-02 20:14:59] Scrollable result sets: enabled
[INFO ][2010-05-02 20:14:59] JDBC3 getGeneratedKeys(): enabled
[INFO ][2010-05-02 20:14:59] Connection release mode: auto
[INFO ][2010-05-02 20:14:59] Maximum outer join fetch depth: 2
[INFO ][2010-05-02 20:14:59] Default batch fetch size: 1
[INFO ][2010-05-02 20:14:59] Generate SQL with comments: disabled
[INFO ][2010-05-02 20:14:59] Order SQL updates by primary key: disabled
[INFO ][2010-05-02 20:14:59] Order SQL inserts for batching: disabled
[INFO ][2010-05-02 20:14:59] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:14:59] Using ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:14:59] Query language substitutions: {}
[INFO ][2010-05-02 20:14:59] JPA-QL strict compliance: disabled
[INFO ][2010-05-02 20:14:59] Second-level cache: enabled
[INFO ][2010-05-02 20:14:59] Query cache: disabled
[INFO ][2010-05-02 20:14:59] Cache provider: org.hibernate.cache.NoCacheProvider
[INFO ][2010-05-02 20:14:59] Optimize cache for minimal puts: disabled
[INFO ][2010-05-02 20:14:59] Structured second-level cache entries: disabled
[INFO ][2010-05-02 20:14:59] Statistics: disabled
[INFO ][2010-05-02 20:14:59] Deleted entity synthetic identifier rollback: disabled
[INFO ][2010-05-02 20:14:59] Default entity-mode: pojo
[INFO ][2010-05-02 20:14:59] Named query checking : enabled
[INFO ][2010-05-02 20:14:59] building session factory
[INFO ][2010-05-02 20:15:00] Not binding factory to JNDI, no JNDI name configured
[WARN ][2010-05-02 20:15:03] SQL Error: 1205, SQLState: 41000
[ERROR][2010-05-02 20:15:03] Lock wait timeout exceeded; try restarting transaction
[ERROR][2010-05-02 20:15:03] Could not synchronize database state with session
org.hibernate.exception.GenericJDBCException: Could not execute JDBC batch update
	at org.hibernate.exception.SQLStateConverter.handledNonSpecificException(SQLStateConverter.java:103)
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:91)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:43)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:254)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:266)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:167)
	at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:298)
	at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:27)
	at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1001)
	at org.springframework.orm.hibernate3.HibernateAccessor.flushIfNecessary(HibernateAccessor.java:390)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:420)
	at org.springframework.orm.hibernate3.HibernateTemplate.executeWithNativeSession(HibernateTemplate.java:374)
	at org.springframework.orm.hibernate3.HibernateTemplate.save(HibernateTemplate.java:694)
	at com.goodfriend.dao.impl.UserDAO.save(UserDAO.java:46)
	at com.goodfriend.dao.test.UserDAOTest.testFindAll(UserDAOTest.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:73)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:46)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41)
	at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:220)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:46)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: java.sql.BatchUpdateException: Lock wait timeout exceeded; try restarting transaction
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:1269)
	at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:955)
	at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:48)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:247)
	... 35 more
[ERROR][2010-05-02 20:15:03] save failed
org.springframework.jdbc.UncategorizedSQLException: Hibernate operation: Could not execute JDBC batch update; uncategorized SQLException for SQL [insert into goodfriend.user (items, user_name, password, real_name, gender, birthday, phone, email, hoby, photo, id_user) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]; SQL state [41000]; error code [1205]; Lock wait timeout exceeded; try restarting transaction; nested exception is java.sql.BatchUpdateException: Lock wait timeout exceeded; try restarting transaction
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:83)
	at org.springframework.orm.hibernate3.HibernateAccessor.convertJdbcAccessException(HibernateAccessor.java:424)
	at org.springframework.orm.hibernate3.HibernateAccessor.convertHibernateAccessException(HibernateAccessor.java:410)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:424)
	at org.springframework.orm.hibernate3.HibernateTemplate.executeWithNativeSession(HibernateTemplate.java:374)
	at org.springframework.orm.hibernate3.HibernateTemplate.save(HibernateTemplate.java:694)
	at com.goodfriend.dao.impl.UserDAO.save(UserDAO.java:46)
	at com.goodfriend.dao.test.UserDAOTest.testFindAll(UserDAOTest.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:73)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:46)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41)
	at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:220)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:46)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: java.sql.BatchUpdateException: Lock wait timeout exceeded; try restarting transaction
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:1269)
	at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:955)
	at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:48)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:247)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:266)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:167)
	at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:298)
	at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:27)
	at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1001)
	at org.springframework.orm.hibernate3.HibernateAccessor.flushIfNecessary(HibernateAccessor.java:390)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:420)
	... 28 more
[INFO ][2010-05-02 20:15:27] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1d86fd3: display name [org.springframework.context.support.ClassPathXmlApplicationContext@1d86fd3]; startup date [Sun May 02 20:15:27 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 20:15:28] Loading XML bean definitions from class path resource [applicationContextForTest.xml]
[INFO ][2010-05-02 20:15:28] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@1d86fd3]: org.springframework.beans.factory.support.DefaultListableBeanFactory@1b34126
[INFO ][2010-05-02 20:15:28] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1b34126: defining beans [sessionFactory,PlacardDAO,StatementDAO,GossipDAO,ItemDAO,AlbumDAO,BlogDAO,UserDAO,PictureDAO,ReplyDAO,FriendsDAO,AdminDAO,loginAction]; root of factory hierarchy
[INFO ][2010-05-02 20:15:28] Hibernate 3.2.7
[INFO ][2010-05-02 20:15:28] hibernate.properties not found
[INFO ][2010-05-02 20:15:28] Bytecode provider name : cglib
[INFO ][2010-05-02 20:15:28] using JDK 1.4 java.sql.Timestamp handling
[INFO ][2010-05-02 20:15:28] configuring from url: file:/K:/SSD10/Project/GoodFriend/WebRoot/WEB-INF/classes/hibernate.cfg.xml
[INFO ][2010-05-02 20:15:28] Reading mappings from resource : com/goodfriend/model/Placard.hbm.xml
[INFO ][2010-05-02 20:15:29] Mapping class: com.goodfriend.model.Placard -> placard
[INFO ][2010-05-02 20:15:29] Reading mappings from resource : com/goodfriend/model/Statement.hbm.xml
[INFO ][2010-05-02 20:15:29] Mapping class: com.goodfriend.model.Statement -> statement
[INFO ][2010-05-02 20:15:29] Reading mappings from resource : com/goodfriend/model/Gossip.hbm.xml
[INFO ][2010-05-02 20:15:29] Mapping class: com.goodfriend.model.Gossip -> gossip
[INFO ][2010-05-02 20:15:29] Reading mappings from resource : com/goodfriend/model/Item.hbm.xml
[INFO ][2010-05-02 20:15:29] Mapping class: com.goodfriend.model.Item -> item
[INFO ][2010-05-02 20:15:29] Reading mappings from resource : com/goodfriend/model/Album.hbm.xml
[INFO ][2010-05-02 20:15:29] Mapping class: com.goodfriend.model.Album -> album
[INFO ][2010-05-02 20:15:29] Reading mappings from resource : com/goodfriend/model/Blog.hbm.xml
[INFO ][2010-05-02 20:15:29] Mapping class: com.goodfriend.model.Blog -> blog
[INFO ][2010-05-02 20:15:29] Reading mappings from resource : com/goodfriend/model/User.hbm.xml
[INFO ][2010-05-02 20:15:29] Mapping class: com.goodfriend.model.User -> user
[INFO ][2010-05-02 20:15:29] Reading mappings from resource : com/goodfriend/model/Picture.hbm.xml
[INFO ][2010-05-02 20:15:29] Mapping class: com.goodfriend.model.Picture -> picture
[INFO ][2010-05-02 20:15:29] Reading mappings from resource : com/goodfriend/model/Reply.hbm.xml
[INFO ][2010-05-02 20:15:29] Mapping class: com.goodfriend.model.Reply -> reply
[INFO ][2010-05-02 20:15:29] Reading mappings from resource : com/goodfriend/model/Friends.hbm.xml
[INFO ][2010-05-02 20:15:29] Mapping class: com.goodfriend.model.Friends -> friends
[INFO ][2010-05-02 20:15:29] Reading mappings from resource : com/goodfriend/model/Admin.hbm.xml
[INFO ][2010-05-02 20:15:29] Mapping class: com.goodfriend.model.Admin -> admin
[INFO ][2010-05-02 20:15:29] Configured SessionFactory: null
[INFO ][2010-05-02 20:15:29] Mapping collection: com.goodfriend.model.Item.gossips -> gossip
[INFO ][2010-05-02 20:15:29] Mapping collection: com.goodfriend.model.Item.pictures -> picture
[INFO ][2010-05-02 20:15:29] Mapping collection: com.goodfriend.model.Item.statements -> statement
[INFO ][2010-05-02 20:15:29] Mapping collection: com.goodfriend.model.Item.users -> user
[INFO ][2010-05-02 20:15:29] Mapping collection: com.goodfriend.model.Item.blogs -> blog
[INFO ][2010-05-02 20:15:29] Mapping collection: com.goodfriend.model.Item.replies -> reply
[INFO ][2010-05-02 20:15:29] Mapping collection: com.goodfriend.model.Item.albums -> album
[INFO ][2010-05-02 20:15:29] Mapping collection: com.goodfriend.model.Album.pictures -> picture
[INFO ][2010-05-02 20:15:29] Mapping collection: com.goodfriend.model.User.friendsesForFriendId -> friends
[INFO ][2010-05-02 20:15:29] Mapping collection: com.goodfriend.model.User.replies -> reply
[INFO ][2010-05-02 20:15:29] Mapping collection: com.goodfriend.model.User.friendsesForUserId -> friends
[INFO ][2010-05-02 20:15:29] Mapping collection: com.goodfriend.model.User.gossips -> gossip
[INFO ][2010-05-02 20:15:29] Building new Hibernate SessionFactory
[INFO ][2010-05-02 20:15:29] Using Hibernate built-in connection pool (not for production use!)
[INFO ][2010-05-02 20:15:29] Hibernate connection pool size: 20
[INFO ][2010-05-02 20:15:29] autocommit mode: false
[INFO ][2010-05-02 20:15:29] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/goodfriend
[INFO ][2010-05-02 20:15:29] connection properties: {user=root, password=****}
[INFO ][2010-05-02 20:15:30] RDBMS: MySQL, version: 5.0.67-community-nt
[INFO ][2010-05-02 20:15:30] JDBC driver: MySQL-AB JDBC Driver, version: mysql-connector-java-5.0.8 ( Revision: ${svn.Revision} )
[INFO ][2010-05-02 20:15:30] Using dialect: org.hibernate.dialect.MySQLDialect
[INFO ][2010-05-02 20:15:30] Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[INFO ][2010-05-02 20:15:30] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[INFO ][2010-05-02 20:15:30] Automatic flush during beforeCompletion(): disabled
[INFO ][2010-05-02 20:15:30] Automatic session close at end of transaction: disabled
[INFO ][2010-05-02 20:15:30] JDBC batch size: 15
[INFO ][2010-05-02 20:15:30] JDBC batch updates for versioned data: disabled
[INFO ][2010-05-02 20:15:30] Scrollable result sets: enabled
[INFO ][2010-05-02 20:15:30] JDBC3 getGeneratedKeys(): enabled
[INFO ][2010-05-02 20:15:30] Connection release mode: auto
[INFO ][2010-05-02 20:15:30] Maximum outer join fetch depth: 2
[INFO ][2010-05-02 20:15:30] Default batch fetch size: 1
[INFO ][2010-05-02 20:15:30] Generate SQL with comments: disabled
[INFO ][2010-05-02 20:15:30] Order SQL updates by primary key: disabled
[INFO ][2010-05-02 20:15:30] Order SQL inserts for batching: disabled
[INFO ][2010-05-02 20:15:30] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:15:30] Using ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:15:30] Query language substitutions: {}
[INFO ][2010-05-02 20:15:30] JPA-QL strict compliance: disabled
[INFO ][2010-05-02 20:15:30] Second-level cache: enabled
[INFO ][2010-05-02 20:15:30] Query cache: disabled
[INFO ][2010-05-02 20:15:30] Cache provider: org.hibernate.cache.NoCacheProvider
[INFO ][2010-05-02 20:15:30] Optimize cache for minimal puts: disabled
[INFO ][2010-05-02 20:15:30] Structured second-level cache entries: disabled
[INFO ][2010-05-02 20:15:30] Statistics: disabled
[INFO ][2010-05-02 20:15:30] Deleted entity synthetic identifier rollback: disabled
[INFO ][2010-05-02 20:15:30] Default entity-mode: pojo
[INFO ][2010-05-02 20:15:30] Named query checking : enabled
[INFO ][2010-05-02 20:15:30] building session factory
[INFO ][2010-05-02 20:15:30] Not binding factory to JNDI, no JNDI name configured
[INFO ][2010-05-02 20:15:38] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@60e128: display name [org.springframework.context.support.ClassPathXmlApplicationContext@60e128]; startup date [Sun May 02 20:15:38 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 20:15:38] Loading XML bean definitions from class path resource [applicationContextForTest.xml]
[INFO ][2010-05-02 20:15:38] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@60e128]: org.springframework.beans.factory.support.DefaultListableBeanFactory@18c3679
[INFO ][2010-05-02 20:15:38] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@18c3679: defining beans [sessionFactory,PlacardDAO,StatementDAO,GossipDAO,ItemDAO,AlbumDAO,BlogDAO,UserDAO,PictureDAO,ReplyDAO,FriendsDAO,AdminDAO,loginAction]; root of factory hierarchy
[INFO ][2010-05-02 20:15:39] Hibernate 3.2.7
[INFO ][2010-05-02 20:15:39] hibernate.properties not found
[INFO ][2010-05-02 20:15:39] Bytecode provider name : cglib
[INFO ][2010-05-02 20:15:39] using JDK 1.4 java.sql.Timestamp handling
[INFO ][2010-05-02 20:15:39] configuring from url: file:/K:/SSD10/Project/GoodFriend/WebRoot/WEB-INF/classes/hibernate.cfg.xml
[INFO ][2010-05-02 20:15:39] Reading mappings from resource : com/goodfriend/model/Placard.hbm.xml
[INFO ][2010-05-02 20:15:39] Mapping class: com.goodfriend.model.Placard -> placard
[INFO ][2010-05-02 20:15:39] Reading mappings from resource : com/goodfriend/model/Statement.hbm.xml
[INFO ][2010-05-02 20:15:39] Mapping class: com.goodfriend.model.Statement -> statement
[INFO ][2010-05-02 20:15:39] Reading mappings from resource : com/goodfriend/model/Gossip.hbm.xml
[INFO ][2010-05-02 20:15:39] Mapping class: com.goodfriend.model.Gossip -> gossip
[INFO ][2010-05-02 20:15:39] Reading mappings from resource : com/goodfriend/model/Item.hbm.xml
[INFO ][2010-05-02 20:15:39] Mapping class: com.goodfriend.model.Item -> item
[INFO ][2010-05-02 20:15:39] Reading mappings from resource : com/goodfriend/model/Album.hbm.xml
[INFO ][2010-05-02 20:15:39] Mapping class: com.goodfriend.model.Album -> album
[INFO ][2010-05-02 20:15:39] Reading mappings from resource : com/goodfriend/model/Blog.hbm.xml
[INFO ][2010-05-02 20:15:39] Mapping class: com.goodfriend.model.Blog -> blog
[INFO ][2010-05-02 20:15:39] Reading mappings from resource : com/goodfriend/model/User.hbm.xml
[INFO ][2010-05-02 20:15:39] Mapping class: com.goodfriend.model.User -> user
[INFO ][2010-05-02 20:15:39] Reading mappings from resource : com/goodfriend/model/Picture.hbm.xml
[INFO ][2010-05-02 20:15:39] Mapping class: com.goodfriend.model.Picture -> picture
[INFO ][2010-05-02 20:15:39] Reading mappings from resource : com/goodfriend/model/Reply.hbm.xml
[INFO ][2010-05-02 20:15:39] Mapping class: com.goodfriend.model.Reply -> reply
[INFO ][2010-05-02 20:15:39] Reading mappings from resource : com/goodfriend/model/Friends.hbm.xml
[INFO ][2010-05-02 20:15:39] Mapping class: com.goodfriend.model.Friends -> friends
[INFO ][2010-05-02 20:15:39] Reading mappings from resource : com/goodfriend/model/Admin.hbm.xml
[INFO ][2010-05-02 20:15:39] Mapping class: com.goodfriend.model.Admin -> admin
[INFO ][2010-05-02 20:15:39] Configured SessionFactory: null
[INFO ][2010-05-02 20:15:39] Mapping collection: com.goodfriend.model.Item.gossips -> gossip
[INFO ][2010-05-02 20:15:39] Mapping collection: com.goodfriend.model.Item.pictures -> picture
[INFO ][2010-05-02 20:15:39] Mapping collection: com.goodfriend.model.Item.statements -> statement
[INFO ][2010-05-02 20:15:39] Mapping collection: com.goodfriend.model.Item.users -> user
[INFO ][2010-05-02 20:15:39] Mapping collection: com.goodfriend.model.Item.blogs -> blog
[INFO ][2010-05-02 20:15:39] Mapping collection: com.goodfriend.model.Item.replies -> reply
[INFO ][2010-05-02 20:15:39] Mapping collection: com.goodfriend.model.Item.albums -> album
[INFO ][2010-05-02 20:15:39] Mapping collection: com.goodfriend.model.Album.pictures -> picture
[INFO ][2010-05-02 20:15:39] Mapping collection: com.goodfriend.model.User.friendsesForFriendId -> friends
[INFO ][2010-05-02 20:15:39] Mapping collection: com.goodfriend.model.User.replies -> reply
[INFO ][2010-05-02 20:15:39] Mapping collection: com.goodfriend.model.User.friendsesForUserId -> friends
[INFO ][2010-05-02 20:15:39] Mapping collection: com.goodfriend.model.User.gossips -> gossip
[INFO ][2010-05-02 20:15:39] Building new Hibernate SessionFactory
[INFO ][2010-05-02 20:15:39] Using Hibernate built-in connection pool (not for production use!)
[INFO ][2010-05-02 20:15:39] Hibernate connection pool size: 20
[INFO ][2010-05-02 20:15:39] autocommit mode: false
[INFO ][2010-05-02 20:15:39] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/goodfriend
[INFO ][2010-05-02 20:15:39] connection properties: {user=root, password=****}
[INFO ][2010-05-02 20:15:40] RDBMS: MySQL, version: 5.0.67-community-nt
[INFO ][2010-05-02 20:15:40] JDBC driver: MySQL-AB JDBC Driver, version: mysql-connector-java-5.0.8 ( Revision: ${svn.Revision} )
[INFO ][2010-05-02 20:15:40] Using dialect: org.hibernate.dialect.MySQLDialect
[INFO ][2010-05-02 20:15:40] Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[INFO ][2010-05-02 20:15:40] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[INFO ][2010-05-02 20:15:40] Automatic flush during beforeCompletion(): disabled
[INFO ][2010-05-02 20:15:40] Automatic session close at end of transaction: disabled
[INFO ][2010-05-02 20:15:40] JDBC batch size: 15
[INFO ][2010-05-02 20:15:40] JDBC batch updates for versioned data: disabled
[INFO ][2010-05-02 20:15:40] Scrollable result sets: enabled
[INFO ][2010-05-02 20:15:40] JDBC3 getGeneratedKeys(): enabled
[INFO ][2010-05-02 20:15:40] Connection release mode: auto
[INFO ][2010-05-02 20:15:40] Maximum outer join fetch depth: 2
[INFO ][2010-05-02 20:15:40] Default batch fetch size: 1
[INFO ][2010-05-02 20:15:40] Generate SQL with comments: disabled
[INFO ][2010-05-02 20:15:40] Order SQL updates by primary key: disabled
[INFO ][2010-05-02 20:15:40] Order SQL inserts for batching: disabled
[INFO ][2010-05-02 20:15:40] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:15:40] Using ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:15:40] Query language substitutions: {}
[INFO ][2010-05-02 20:15:40] JPA-QL strict compliance: disabled
[INFO ][2010-05-02 20:15:40] Second-level cache: enabled
[INFO ][2010-05-02 20:15:40] Query cache: disabled
[INFO ][2010-05-02 20:15:40] Cache provider: org.hibernate.cache.NoCacheProvider
[INFO ][2010-05-02 20:15:40] Optimize cache for minimal puts: disabled
[INFO ][2010-05-02 20:15:40] Structured second-level cache entries: disabled
[INFO ][2010-05-02 20:15:40] Statistics: disabled
[INFO ][2010-05-02 20:15:40] Deleted entity synthetic identifier rollback: disabled
[INFO ][2010-05-02 20:15:40] Default entity-mode: pojo
[INFO ][2010-05-02 20:15:40] Named query checking : enabled
[INFO ][2010-05-02 20:15:40] building session factory
[INFO ][2010-05-02 20:15:40] Not binding factory to JNDI, no JNDI name configured
[WARN ][2010-05-02 20:15:41] SQL Error: 0, SQLState: 22001
[ERROR][2010-05-02 20:15:41] Data truncation: Data too long for column 'user_name' at row 1
[ERROR][2010-05-02 20:15:41] Could not synchronize database state with session
org.hibernate.exception.DataException: Could not execute JDBC batch update
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:77)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:43)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:254)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:266)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:167)
	at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:298)
	at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:27)
	at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1001)
	at org.springframework.orm.hibernate3.HibernateAccessor.flushIfNecessary(HibernateAccessor.java:390)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:420)
	at org.springframework.orm.hibernate3.HibernateTemplate.executeWithNativeSession(HibernateTemplate.java:374)
	at org.springframework.orm.hibernate3.HibernateTemplate.save(HibernateTemplate.java:694)
	at com.goodfriend.dao.impl.UserDAO.save(UserDAO.java:46)
	at com.goodfriend.dao.test.UserDAOTest.testFindByUserName(UserDAOTest.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:73)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:46)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41)
	at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:220)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:46)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: java.sql.BatchUpdateException: Data truncation: Data too long for column 'user_name' at row 1
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:1269)
	at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:955)
	at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:48)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:247)
	... 35 more
[ERROR][2010-05-02 20:15:41] save failed
org.springframework.dao.DataIntegrityViolationException: Could not execute JDBC batch update; nested exception is org.hibernate.exception.DataException: Could not execute JDBC batch update
	at org.springframework.orm.hibernate3.SessionFactoryUtils.convertHibernateAccessException(SessionFactoryUtils.java:639)
	at org.springframework.orm.hibernate3.HibernateAccessor.convertHibernateAccessException(HibernateAccessor.java:412)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:424)
	at org.springframework.orm.hibernate3.HibernateTemplate.executeWithNativeSession(HibernateTemplate.java:374)
	at org.springframework.orm.hibernate3.HibernateTemplate.save(HibernateTemplate.java:694)
	at com.goodfriend.dao.impl.UserDAO.save(UserDAO.java:46)
	at com.goodfriend.dao.test.UserDAOTest.testFindByUserName(UserDAOTest.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:73)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:46)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41)
	at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:220)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:46)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.hibernate.exception.DataException: Could not execute JDBC batch update
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:77)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:43)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:254)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:266)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:167)
	at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:298)
	at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:27)
	at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1001)
	at org.springframework.orm.hibernate3.HibernateAccessor.flushIfNecessary(HibernateAccessor.java:390)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:420)
	... 28 more
Caused by: java.sql.BatchUpdateException: Data truncation: Data too long for column 'user_name' at row 1
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:1269)
	at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:955)
	at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:48)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:247)
	... 35 more
[INFO ][2010-05-02 20:16:13] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7f4ec: display name [org.springframework.context.support.ClassPathXmlApplicationContext@7f4ec]; startup date [Sun May 02 20:16:13 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 20:16:14] Loading XML bean definitions from class path resource [applicationContextForTest.xml]
[INFO ][2010-05-02 20:16:14] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@7f4ec]: org.springframework.beans.factory.support.DefaultListableBeanFactory@17200b4
[INFO ][2010-05-02 20:16:14] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@17200b4: defining beans [sessionFactory,PlacardDAO,StatementDAO,GossipDAO,ItemDAO,AlbumDAO,BlogDAO,UserDAO,PictureDAO,ReplyDAO,FriendsDAO,AdminDAO,loginAction]; root of factory hierarchy
[INFO ][2010-05-02 20:16:14] Hibernate 3.2.7
[INFO ][2010-05-02 20:16:14] hibernate.properties not found
[INFO ][2010-05-02 20:16:14] Bytecode provider name : cglib
[INFO ][2010-05-02 20:16:14] using JDK 1.4 java.sql.Timestamp handling
[INFO ][2010-05-02 20:16:14] configuring from url: file:/K:/SSD10/Project/GoodFriend/WebRoot/WEB-INF/classes/hibernate.cfg.xml
[INFO ][2010-05-02 20:16:14] Reading mappings from resource : com/goodfriend/model/Placard.hbm.xml
[INFO ][2010-05-02 20:16:15] Mapping class: com.goodfriend.model.Placard -> placard
[INFO ][2010-05-02 20:16:15] Reading mappings from resource : com/goodfriend/model/Statement.hbm.xml
[INFO ][2010-05-02 20:16:15] Mapping class: com.goodfriend.model.Statement -> statement
[INFO ][2010-05-02 20:16:15] Reading mappings from resource : com/goodfriend/model/Gossip.hbm.xml
[INFO ][2010-05-02 20:16:15] Mapping class: com.goodfriend.model.Gossip -> gossip
[INFO ][2010-05-02 20:16:15] Reading mappings from resource : com/goodfriend/model/Item.hbm.xml
[INFO ][2010-05-02 20:16:15] Mapping class: com.goodfriend.model.Item -> item
[INFO ][2010-05-02 20:16:15] Reading mappings from resource : com/goodfriend/model/Album.hbm.xml
[INFO ][2010-05-02 20:16:15] Mapping class: com.goodfriend.model.Album -> album
[INFO ][2010-05-02 20:16:15] Reading mappings from resource : com/goodfriend/model/Blog.hbm.xml
[INFO ][2010-05-02 20:16:15] Mapping class: com.goodfriend.model.Blog -> blog
[INFO ][2010-05-02 20:16:15] Reading mappings from resource : com/goodfriend/model/User.hbm.xml
[INFO ][2010-05-02 20:16:15] Mapping class: com.goodfriend.model.User -> user
[INFO ][2010-05-02 20:16:15] Reading mappings from resource : com/goodfriend/model/Picture.hbm.xml
[INFO ][2010-05-02 20:16:15] Mapping class: com.goodfriend.model.Picture -> picture
[INFO ][2010-05-02 20:16:15] Reading mappings from resource : com/goodfriend/model/Reply.hbm.xml
[INFO ][2010-05-02 20:16:15] Mapping class: com.goodfriend.model.Reply -> reply
[INFO ][2010-05-02 20:16:15] Reading mappings from resource : com/goodfriend/model/Friends.hbm.xml
[INFO ][2010-05-02 20:16:15] Mapping class: com.goodfriend.model.Friends -> friends
[INFO ][2010-05-02 20:16:15] Reading mappings from resource : com/goodfriend/model/Admin.hbm.xml
[INFO ][2010-05-02 20:16:15] Mapping class: com.goodfriend.model.Admin -> admin
[INFO ][2010-05-02 20:16:15] Configured SessionFactory: null
[INFO ][2010-05-02 20:16:15] Mapping collection: com.goodfriend.model.Item.gossips -> gossip
[INFO ][2010-05-02 20:16:15] Mapping collection: com.goodfriend.model.Item.pictures -> picture
[INFO ][2010-05-02 20:16:15] Mapping collection: com.goodfriend.model.Item.statements -> statement
[INFO ][2010-05-02 20:16:15] Mapping collection: com.goodfriend.model.Item.users -> user
[INFO ][2010-05-02 20:16:15] Mapping collection: com.goodfriend.model.Item.blogs -> blog
[INFO ][2010-05-02 20:16:15] Mapping collection: com.goodfriend.model.Item.replies -> reply
[INFO ][2010-05-02 20:16:15] Mapping collection: com.goodfriend.model.Item.albums -> album
[INFO ][2010-05-02 20:16:15] Mapping collection: com.goodfriend.model.Album.pictures -> picture
[INFO ][2010-05-02 20:16:15] Mapping collection: com.goodfriend.model.User.friendsesForFriendId -> friends
[INFO ][2010-05-02 20:16:15] Mapping collection: com.goodfriend.model.User.replies -> reply
[INFO ][2010-05-02 20:16:15] Mapping collection: com.goodfriend.model.User.friendsesForUserId -> friends
[INFO ][2010-05-02 20:16:15] Mapping collection: com.goodfriend.model.User.gossips -> gossip
[INFO ][2010-05-02 20:16:15] Building new Hibernate SessionFactory
[INFO ][2010-05-02 20:16:15] Using Hibernate built-in connection pool (not for production use!)
[INFO ][2010-05-02 20:16:15] Hibernate connection pool size: 20
[INFO ][2010-05-02 20:16:15] autocommit mode: false
[INFO ][2010-05-02 20:16:15] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/goodfriend
[INFO ][2010-05-02 20:16:15] connection properties: {user=root, password=****}
[INFO ][2010-05-02 20:16:15] RDBMS: MySQL, version: 5.0.67-community-nt
[INFO ][2010-05-02 20:16:15] JDBC driver: MySQL-AB JDBC Driver, version: mysql-connector-java-5.0.8 ( Revision: ${svn.Revision} )
[INFO ][2010-05-02 20:16:15] Using dialect: org.hibernate.dialect.MySQLDialect
[INFO ][2010-05-02 20:16:15] Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[INFO ][2010-05-02 20:16:15] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[INFO ][2010-05-02 20:16:15] Automatic flush during beforeCompletion(): disabled
[INFO ][2010-05-02 20:16:15] Automatic session close at end of transaction: disabled
[INFO ][2010-05-02 20:16:15] JDBC batch size: 15
[INFO ][2010-05-02 20:16:15] JDBC batch updates for versioned data: disabled
[INFO ][2010-05-02 20:16:15] Scrollable result sets: enabled
[INFO ][2010-05-02 20:16:15] JDBC3 getGeneratedKeys(): enabled
[INFO ][2010-05-02 20:16:15] Connection release mode: auto
[INFO ][2010-05-02 20:16:15] Maximum outer join fetch depth: 2
[INFO ][2010-05-02 20:16:15] Default batch fetch size: 1
[INFO ][2010-05-02 20:16:15] Generate SQL with comments: disabled
[INFO ][2010-05-02 20:16:15] Order SQL updates by primary key: disabled
[INFO ][2010-05-02 20:16:15] Order SQL inserts for batching: disabled
[INFO ][2010-05-02 20:16:15] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:16:15] Using ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:16:15] Query language substitutions: {}
[INFO ][2010-05-02 20:16:15] JPA-QL strict compliance: disabled
[INFO ][2010-05-02 20:16:15] Second-level cache: enabled
[INFO ][2010-05-02 20:16:15] Query cache: disabled
[INFO ][2010-05-02 20:16:15] Cache provider: org.hibernate.cache.NoCacheProvider
[INFO ][2010-05-02 20:16:15] Optimize cache for minimal puts: disabled
[INFO ][2010-05-02 20:16:15] Structured second-level cache entries: disabled
[INFO ][2010-05-02 20:16:15] Statistics: disabled
[INFO ][2010-05-02 20:16:15] Deleted entity synthetic identifier rollback: disabled
[INFO ][2010-05-02 20:16:15] Default entity-mode: pojo
[INFO ][2010-05-02 20:16:15] Named query checking : enabled
[INFO ][2010-05-02 20:16:15] building session factory
[INFO ][2010-05-02 20:16:16] Not binding factory to JNDI, no JNDI name configured
[WARN ][2010-05-02 20:16:16] SQL Error: 0, SQLState: 22001
[ERROR][2010-05-02 20:16:16] Data truncation: Data too long for column 'user_name' at row 1
[ERROR][2010-05-02 20:16:16] Could not synchronize database state with session
org.hibernate.exception.DataException: Could not execute JDBC batch update
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:77)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:43)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:254)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:266)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:167)
	at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:298)
	at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:27)
	at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1001)
	at org.springframework.orm.hibernate3.HibernateAccessor.flushIfNecessary(HibernateAccessor.java:390)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:420)
	at org.springframework.orm.hibernate3.HibernateTemplate.executeWithNativeSession(HibernateTemplate.java:374)
	at org.springframework.orm.hibernate3.HibernateTemplate.save(HibernateTemplate.java:694)
	at com.goodfriend.dao.impl.UserDAO.save(UserDAO.java:46)
	at com.goodfriend.dao.test.UserDAOTest.testFindByUserName(UserDAOTest.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:73)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:46)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41)
	at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:220)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:46)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: java.sql.BatchUpdateException: Data truncation: Data too long for column 'user_name' at row 1
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:1269)
	at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:955)
	at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:48)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:247)
	... 35 more
[ERROR][2010-05-02 20:16:16] save failed
org.springframework.dao.DataIntegrityViolationException: Could not execute JDBC batch update; nested exception is org.hibernate.exception.DataException: Could not execute JDBC batch update
	at org.springframework.orm.hibernate3.SessionFactoryUtils.convertHibernateAccessException(SessionFactoryUtils.java:639)
	at org.springframework.orm.hibernate3.HibernateAccessor.convertHibernateAccessException(HibernateAccessor.java:412)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:424)
	at org.springframework.orm.hibernate3.HibernateTemplate.executeWithNativeSession(HibernateTemplate.java:374)
	at org.springframework.orm.hibernate3.HibernateTemplate.save(HibernateTemplate.java:694)
	at com.goodfriend.dao.impl.UserDAO.save(UserDAO.java:46)
	at com.goodfriend.dao.test.UserDAOTest.testFindByUserName(UserDAOTest.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:73)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:46)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41)
	at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:220)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:46)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.hibernate.exception.DataException: Could not execute JDBC batch update
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:77)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:43)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:254)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:266)
	at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:167)
	at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:298)
	at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:27)
	at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1001)
	at org.springframework.orm.hibernate3.HibernateAccessor.flushIfNecessary(HibernateAccessor.java:390)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:420)
	... 28 more
Caused by: java.sql.BatchUpdateException: Data truncation: Data too long for column 'user_name' at row 1
	at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:1269)
	at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:955)
	at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:48)
	at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:247)
	... 35 more
[INFO ][2010-05-02 20:16:37] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@60e128: display name [org.springframework.context.support.ClassPathXmlApplicationContext@60e128]; startup date [Sun May 02 20:16:37 CST 2010]; root of context hierarchy
[INFO ][2010-05-02 20:16:37] Loading XML bean definitions from class path resource [applicationContextForTest.xml]
[INFO ][2010-05-02 20:16:38] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@60e128]: org.springframework.beans.factory.support.DefaultListableBeanFactory@18c3679
[INFO ][2010-05-02 20:16:38] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@18c3679: defining beans [sessionFactory,PlacardDAO,StatementDAO,GossipDAO,ItemDAO,AlbumDAO,BlogDAO,UserDAO,PictureDAO,ReplyDAO,FriendsDAO,AdminDAO,loginAction]; root of factory hierarchy
[INFO ][2010-05-02 20:16:38] Hibernate 3.2.7
[INFO ][2010-05-02 20:16:38] hibernate.properties not found
[INFO ][2010-05-02 20:16:38] Bytecode provider name : cglib
[INFO ][2010-05-02 20:16:38] using JDK 1.4 java.sql.Timestamp handling
[INFO ][2010-05-02 20:16:38] configuring from url: file:/K:/SSD10/Project/GoodFriend/WebRoot/WEB-INF/classes/hibernate.cfg.xml
[INFO ][2010-05-02 20:16:38] Reading mappings from resource : com/goodfriend/model/Placard.hbm.xml
[INFO ][2010-05-02 20:16:38] Mapping class: com.goodfriend.model.Placard -> placard
[INFO ][2010-05-02 20:16:38] Reading mappings from resource : com/goodfriend/model/Statement.hbm.xml
[INFO ][2010-05-02 20:16:38] Mapping class: com.goodfriend.model.Statement -> statement
[INFO ][2010-05-02 20:16:38] Reading mappings from resource : com/goodfriend/model/Gossip.hbm.xml
[INFO ][2010-05-02 20:16:39] Mapping class: com.goodfriend.model.Gossip -> gossip
[INFO ][2010-05-02 20:16:39] Reading mappings from resource : com/goodfriend/model/Item.hbm.xml
[INFO ][2010-05-02 20:16:39] Mapping class: com.goodfriend.model.Item -> item
[INFO ][2010-05-02 20:16:39] Reading mappings from resource : com/goodfriend/model/Album.hbm.xml
[INFO ][2010-05-02 20:16:39] Mapping class: com.goodfriend.model.Album -> album
[INFO ][2010-05-02 20:16:39] Reading mappings from resource : com/goodfriend/model/Blog.hbm.xml
[INFO ][2010-05-02 20:16:39] Mapping class: com.goodfriend.model.Blog -> blog
[INFO ][2010-05-02 20:16:39] Reading mappings from resource : com/goodfriend/model/User.hbm.xml
[INFO ][2010-05-02 20:16:39] Mapping class: com.goodfriend.model.User -> user
[INFO ][2010-05-02 20:16:39] Reading mappings from resource : com/goodfriend/model/Picture.hbm.xml
[INFO ][2010-05-02 20:16:39] Mapping class: com.goodfriend.model.Picture -> picture
[INFO ][2010-05-02 20:16:39] Reading mappings from resource : com/goodfriend/model/Reply.hbm.xml
[INFO ][2010-05-02 20:16:39] Mapping class: com.goodfriend.model.Reply -> reply
[INFO ][2010-05-02 20:16:39] Reading mappings from resource : com/goodfriend/model/Friends.hbm.xml
[INFO ][2010-05-02 20:16:39] Mapping class: com.goodfriend.model.Friends -> friends
[INFO ][2010-05-02 20:16:39] Reading mappings from resource : com/goodfriend/model/Admin.hbm.xml
[INFO ][2010-05-02 20:16:39] Mapping class: com.goodfriend.model.Admin -> admin
[INFO ][2010-05-02 20:16:39] Configured SessionFactory: null
[INFO ][2010-05-02 20:16:39] Mapping collection: com.goodfriend.model.Item.gossips -> gossip
[INFO ][2010-05-02 20:16:39] Mapping collection: com.goodfriend.model.Item.pictures -> picture
[INFO ][2010-05-02 20:16:39] Mapping collection: com.goodfriend.model.Item.statements -> statement
[INFO ][2010-05-02 20:16:39] Mapping collection: com.goodfriend.model.Item.users -> user
[INFO ][2010-05-02 20:16:39] Mapping collection: com.goodfriend.model.Item.blogs -> blog
[INFO ][2010-05-02 20:16:39] Mapping collection: com.goodfriend.model.Item.replies -> reply
[INFO ][2010-05-02 20:16:39] Mapping collection: com.goodfriend.model.Item.albums -> album
[INFO ][2010-05-02 20:16:39] Mapping collection: com.goodfriend.model.Album.pictures -> picture
[INFO ][2010-05-02 20:16:39] Mapping collection: com.goodfriend.model.User.friendsesForFriendId -> friends
[INFO ][2010-05-02 20:16:39] Mapping collection: com.goodfriend.model.User.replies -> reply
[INFO ][2010-05-02 20:16:39] Mapping collection: com.goodfriend.model.User.friendsesForUserId -> friends
[INFO ][2010-05-02 20:16:39] Mapping collection: com.goodfriend.model.User.gossips -> gossip
[INFO ][2010-05-02 20:16:39] Building new Hibernate SessionFactory
[INFO ][2010-05-02 20:16:39] Using Hibernate built-in connection pool (not for production use!)
[INFO ][2010-05-02 20:16:39] Hibernate connection pool size: 20
[INFO ][2010-05-02 20:16:39] autocommit mode: false
[INFO ][2010-05-02 20:16:39] using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/goodfriend
[INFO ][2010-05-02 20:16:39] connection properties: {user=root, password=****}
[INFO ][2010-05-02 20:16:39] RDBMS: MySQL, version: 5.0.67-community-nt
[INFO ][2010-05-02 20:16:39] JDBC driver: MySQL-AB JDBC Driver, version: mysql-connector-java-5.0.8 ( Revision: ${svn.Revision} )
[INFO ][2010-05-02 20:16:39] Using dialect: org.hibernate.dialect.MySQLDialect
[INFO ][2010-05-02 20:16:39] Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[INFO ][2010-05-02 20:16:39] No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[INFO ][2010-05-02 20:16:39] Automatic flush during beforeCompletion(): disabled
[INFO ][2010-05-02 20:16:39] Automatic session close at end of transaction: disabled
[INFO ][2010-05-02 20:16:39] JDBC batch size: 15
[INFO ][2010-05-02 20:16:39] JDBC batch updates for versioned data: disabled
[INFO ][2010-05-02 20:16:39] Scrollable result sets: enabled
[INFO ][2010-05-02 20:16:39] JDBC3 getGeneratedKeys(): enabled
[INFO ][2010-05-02 20:16:39] Connection release mode: auto
[INFO ][2010-05-02 20:16:39] Maximum outer join fetch depth: 2
[INFO ][2010-05-02 20:16:39] Default batch fetch size: 1
[INFO ][2010-05-02 20:16:39] Generate SQL with comments: disabled
[INFO ][2010-05-02 20:16:39] Order SQL updates by primary key: disabled
[INFO ][2010-05-02 20:16:39] Order SQL inserts for batching: disabled
[INFO ][2010-05-02 20:16:39] Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:16:39] Using ASTQueryTranslatorFactory
[INFO ][2010-05-02 20:16:39] Query language substitutions: {}
[INFO ][2010-05-02 20:16:39] JPA-QL strict compliance: disabled
[INFO ][2010-05-02 20:16:39] Second-level cache: enabled
[INFO ][2010-05-02 20:16:39] Query cache: disabled
[INFO ][2010-05-02 20:16:39] Cache provider: org.hibernate.cache.NoCacheProvider
[INFO ][2010-05-02 20:16:39] Optimize cache for minimal puts: disabled
[INFO ][2010-05-02 20:16:39] Structured second-level cache entries: disabled
[INFO ][2010-05-02 20:16:39] Statistics: disabled
[INFO ][2010-05-02 20:16:39] Deleted entity synthetic identifier rollback: disabled
[INFO ][2010-05-02 20:16:39] Default entity-mode: pojo
[INFO ][2010-05-02 20:16:39] Named query checking : enabled
[INFO ][2010-05-02 20:16:39] building session factory
[INFO ][2010-05-02 20:16:40] Not binding factory to JNDI, no JNDI name configured
